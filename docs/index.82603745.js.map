{"mappings":"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","sources":["node_modules/@swc/helpers/src/_assert_this_initialized.js","node_modules/@swc/helpers/src/_class_call_check.js","node_modules/@swc/helpers/src/_create_class.js","node_modules/@swc/helpers/src/_set_prototype_of.js","node_modules/@swc/helpers/src/_inherits.js","node_modules/@swc/helpers/src/_possible_constructor_return.js","node_modules/@swc/helpers/src/_type_of.js","node_modules/@swc/helpers/src/_construct.js","node_modules/@swc/helpers/src/_get_prototype_of.js","node_modules/@swc/helpers/src/_wrap_native_super.js","node_modules/@swc/helpers/src/_is_native_function.js","node_modules/@swc/helpers/src/_create_super.js","node_modules/@swc/helpers/src/_is_native_reflect_construct.js","node_modules/ogl/src/core/Program.js","node_modules/ogl/src/math/functions/Vec3Func.js","node_modules/ogl/src/math/Vec3.js","node_modules/ogl/src/core/Renderer.js","node_modules/ogl/src/math/functions/QuatFunc.js","node_modules/ogl/src/math/functions/Vec4Func.js","node_modules/ogl/src/math/Quat.js","node_modules/ogl/src/math/functions/Mat4Func.js","node_modules/ogl/src/math/Mat4.js","node_modules/ogl/src/math/functions/EulerFunc.js","node_modules/ogl/src/math/Euler.js","node_modules/ogl/src/core/Transform.js","node_modules/ogl/src/math/functions/Vec2Func.js","node_modules/ogl/src/math/Vec2.js","src/texture3D.js","src/world/index.js","src/shaders/main.vert","src/shaders/main.frag"],"sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n","function setPrototypeOf(o, p) {\n  setPrototypeOf = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return setPrototypeOf(o, p);\n}\n\nexport default function _setPrototypeOf(o, p) {\n  return setPrototypeOf(o, p);\n}\n","import setPrototypeOf from './_set_prototype_of';\n\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n","import assertThisInitialized from './_assert_this_initialized';\nimport _typeof from './_type_of';\n\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n","export default function _typeof(obj) {\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n","function isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () { }));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    construct = Reflect.construct;\n  } else {\n    construct = function construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return construct.apply(null, arguments);\n}\n\nexport default function _construct(Parent, args, Class) {\n  return construct.apply(null, arguments);\n}","function getPrototypeOf(o) {\n  getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return getPrototypeOf(o);\n}\n\nexport default function _getPrototypeOf(o) {\n  return getPrototypeOf(o);\n}","import construct from './_construct';\nimport isNativeFunction from './_is_native_function';\nimport getPrototypeOf from './_get_prototype_of';\nimport setPrototypeOf from './_set_prototype_of';\n\nfunction wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  wrapNativeSuper = function wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return wrapNativeSuper(Class);\n}\n\nexport default function _wrapNativeSuper(Class) {\n  return wrapNativeSuper(Class);\n}\n","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n","import _isNativeReflectConstruct from \"./_is_native_reflect_construct\";\nimport _getPrototypeOf from \"./_get_prototype_of\";\nimport _possibleConstructorReturn from './_possible_constructor_return';\n\nexport default function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n        var Super = _getPrototypeOf(Derived),\n            result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = _getPrototypeOf(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return _possibleConstructorReturn(this, result);\n    };\n}","export default function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () { }));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LESS,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as fist argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n\n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) this.gl = canvas.getContext('webgl', attributes);\n        if (!this.gl) console.error('unable to create webgl context');\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { x: 0, y: 0, width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height, x = 0, y = 0) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.state.viewport.x = x;\n        this.state.viewport.y = y;\n        this.gl.viewport(x, y, width, height);\n    }\n\n    setScissor(width, height, x = 0, y = 0) {\n        this.gl.scissor(x, y, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let by = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bz = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot; // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0]) i = 1;\n        if (m[8] > m[i * 3 + i]) i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}\n","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this) {\n        QuatFunc.invert(this, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this) {\n        QuatFunc.conjugate(this, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this) {\n        QuatFunc.normalize(this, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this, qA, qB);\n        } else {\n            QuatFunc.multiply(this, this, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler) {\n        QuatFunc.fromEuler(this, euler, euler.order);\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this, axis, a);\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this, this, q, t);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a03 = a[3];\n        let a12 = a[6],\n            a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    let len = Math.hypot(x, y, z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n        // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function () {\n    const temp = [0, 0, 0];\n\n    return function (out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n\n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n\n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n\n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n\n        return out;\n    };\n})();\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} target Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len === 0) {\n        // eye and target are in the same position\n        z2 = 1;\n    } else {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len === 0) {\n        // up and z are parallel\n        if (upz) {\n            upx += 1e-6;\n        } else if (upy) {\n            upz += 1e-6;\n        } else {\n            upy += 1e-6;\n        }\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\n\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n    }\n\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}\n","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1,\n        m01 = 0,\n        m02 = 0,\n        m03 = 0,\n        m10 = 0,\n        m11 = 1,\n        m12 = 0,\n        m13 = 0,\n        m20 = 0,\n        m21 = 0,\n        m22 = 1,\n        m23 = 0,\n        m30 = 0,\n        m31 = 0,\n        m32 = 0,\n        m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(this, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({ fov, aspect, near, far } = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this[4] = a[o + 4];\n        this[5] = a[o + 5];\n        this[6] = a[o + 6];\n        this[7] = a[o + 7];\n        this[8] = a[o + 8];\n        this[9] = a[o + 9];\n        this[10] = a[o + 10];\n        this[11] = a[o + 11];\n        this[12] = a[o + 12];\n        this[13] = a[o + 13];\n        this[14] = a[o + 14];\n        this[15] = a[o + 15];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        a[o + 4] = this[4];\n        a[o + 5] = this[5];\n        a[o + 6] = this[6];\n        a[o + 7] = this[7];\n        a[o + 8] = this[8];\n        a[o + 9] = this[9];\n        a[o + 10] = this[10];\n        a[o + 11] = this[11];\n        a[o + 12] = this[12];\n        a[o + 13] = this[13];\n        a[o + 14] = this[14];\n        a[o + 15] = this[15];\n        return a;\n    }\n}\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport { Mat4 } from './Mat4.js';\n\nconst tmpMat4 = new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this, m, order);\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order) {\n        tmpMat4.fromQuaternion(q);\n        return this.fromRotationMatrix(tmpMat4, order);\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Euler } from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.getTranslation(this.position);\n        this.matrix.getRotation(this.quaternion);\n        this.matrix.getScaling(this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n        return this;\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture3D {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == gl.TEXTURE_2D ? true : false,\n            anisotropy = 0,\n            level = 0,\n            layers = 1,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.layers = layers;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(\n                this.target,\n                this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT,\n                this.anisotropy\n            );\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage3D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        this.level,\n                        this.internalFormat,\n                        this.format,\n                        this.type,\n                        this.image[i]\n                    );\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                this.gl.texImage3D(this.target, this.level, this.internalFormat, this.width, this.height, this.layers, 0, this.format, this.type, this.image);\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage3D(\n                        this.target,\n                        level,\n                        this.internalFormat,\n                        this.image[level].width,\n                        this.image[level].height,\n                        0,\n                        this.image[level].data\n                    );\n                }\n            } else {\n                // Regular texture\n                this.gl.texImage3D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage3D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        0,\n                        this.gl.RGBA,\n                        1,\n                        1,\n                        0,\n                        this.gl.RGBA,\n                        this.gl.UNSIGNED_BYTE,\n                        emptyPixel\n                    );\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                this.gl.texImage3D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage3D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}","/* eslint-disable immutable/no-mutation */\n\n\nimport { Renderer,Transform,Program,Vec2,Texture} from 'ogl'\n\nimport {Texture3D } from '../texture3D';\n\nexport const renderer = new Renderer({ dpr: 0.75})\nexport const scene = new Transform()\n\nimport vertex from \"../shaders/main.vert\"\nimport fragment from \"../shaders/main.frag\"\n\n\nconst gl = renderer.gl\ndocument.body.appendChild(gl.canvas)\ngl.clearColor(1, 1, 1, 1);\n\nconst zoom = { value: 0.5 }\nconst pan = { value: new Vec2(0,0)}\nconst uTime = { value: 0.0 }\n\nfunction resize() {\n    renderer.setSize(window.innerWidth, window.innerHeight)\n}\n\nresize()\nwindow.addEventListener('resize', resize, false)\n\n\n\nconst images = [ \n    \n    {\n        wa:11,\n        data:new Uint8Array([\n        0,0,1,1,1,1,0,0,0,1,1,\n        0,1,0,0,0,0,1,0,0,1,1,\n        1,0,0,0,0,0,0,1,0,1,1,\n        1,0,2,0,0,2,0,1,0,1,1,\n        1,0,0,0,0,0,0,1,0,1,1,\n        1,0,3,3,3,3,0,1,0,1,1,\n        0,1,0,0,0,0,1,0,0,1,1,\n        0,0,1,1,1,1,0,0,0,1,1,\n        0,0,1,1,1,1,0,0,1,1,0,\n        0,0,1,1,1,1,0,0,0,1,1,\n        0,1,0,0,0,0,1,0,0,1,1,\n        1,0,0,0,0,0,0,1,0,1,1,\n        1,0,2,0,0,2,0,1,0,1,1,\n        1,0,0,0,0,0,0,1,0,1,1,\n        1,0,3,3,3,3,0,1,0,1,1,\n        0,1,0,0,0,0,1,0,0,1,1,\n        0,0,1,1,1,1,0,0,0,1,1,\n        0,0,1,1,1,1,0,0,1,1,0\n    ])\n    \n    },\n    {\n   \n    wa:8,\n    data:new Uint8Array([\n    0,0,1,1,1,1,0,0,\n    0,1,0,0,0,0,1,0,\n    1,0,0,0,0,0,0,1,\n    1,0,2,0,0,2,0,1,\n    1,0,0,0,0,0,0,1,\n    1,0,3,3,3,3,0,1,\n    0,1,0,0,0,0,1,0,\n    0,0,1,1,1,1,0,0\n])\n\n}]\n\n\nfor (let i = 0; i < 30000; i++) {\n    images.push({\n        wa:32,\n        data:new Uint8Array(32 * 32).fill(0).map((a,ind) =>Math.floor(Math.random() *7 ))\n    })\n}\n\nfor(const image of images){\n    image.w = image.h = 32;\n}\n\n\nconst width =   1024 ;\nconst height = width;\n\nconst cols = Math.floor(width / 32);\nconst layers = Math.ceil(images.length / (cols*cols) );\nconsole.log(cols,layers,width,images.length / (cols*cols));\n\n\nconst c = new Uint8Array((width*height) * layers );\n   let indx = 0;\n  \n   \n    for(const image of images){\n       for (let y = 0; y < 32 ; y++) {\n            for (let x = 0; x < image.wa ; x++) { \n                        c[x+(y+(Math.floor(indx/cols ) *32))*width+((indx%cols)*32 ) ] = image.data[x+y*image.wa];    \n                        \n            }\n        }\n        indx++;    \n    }\n\n  \n\nconst tex = new Texture3D(gl,{target:gl.TEXTURE_2D_ARRAY,image:c,generateMipmaps:false,format:gl.ALPHA,type:gl.UNSIGNED_BYTE,width:width,layers,magFilter:gl.NEAREST,minFilter:gl.NEAREST})\nconst numVertices = 100000;\nconst program = new Program(gl, {\n    vertex,\n    fragment,\n    uniforms: {\n        uTime,   \n        zoom,\n        pan,\n        width:{value   :width},\n        height:{value  :height},\n        u_image: { value: tex },\n        numVerts:{value:numVertices}\n    },\n    transparent: true,\n    depthTest: false\n})\n\nif(!gl.getProgramParameter(program.program, gl.LINK_STATUS)){\n    throw new Error(\"shader compile error ^^^^^\")\n}\n\nrequestAnimationFrame(update)\n\nfunction update() {\n    requestAnimationFrame(update);\n    uTime.value += 0.01;\n    program.use();\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.drawArrays(gl.POINTS, 0, numVertices);\n}\n","#version 300 es\n\nuniform float uTime;\nuniform int numVerts;\n\nflat out int vid;\nflat out float rotation;\n\nfloat hash(float p) {\n  vec2 p2 = fract(vec2(p * 5.3983, p * 5.4427));\n  p2 += dot(p2.yx, p2.xy + vec2(21.5351, 14.3137));\n  return fract(p2.x * p2.y * 95.4337);\n}\n\nvoid main() {\n  float u = float(gl_VertexID) / float(numVerts);\n  vid = gl_VertexID;\n  float size =  14.+(sin(uTime  ) * 70.0);\n    float off = floor(uTime + u) / 1000.0;            // changes once per second per vertex\n\n  float x = hash(u + off) * 2.0 - 1.0;             // random position\n  float y = fract(uTime + u) * -2.0 + 1.0;      // 1.0 ->  -1.0\n  rotation = uTime;\n  gl_Position = vec4(x, y, 0, 1);\n  gl_PointSize = size;\n}","#version 300 es\nprecision highp float;\n precision highp sampler2DArray;\n#define PI 3.1415926538\n\nuniform float uTime;\nuniform sampler2DArray u_image;\nuniform int width;\nuniform int height;\n\nflat in int vid;\nflat in float rotation;\n\nout vec4 color;\n#pragma glslify: palette = require('./palette.glsl')\n\nvec2 rotateUV(vec2 uv, float rotation, vec2 mid)\n{\n    float cosAngle = cos(rotation);\n    float sinAngle = sin(rotation);\n    return vec2(\n        cosAngle * (uv.x - mid.x) + sinAngle * (uv.y - mid.y) + mid.x,\n        cosAngle * (uv.y - mid.y) - sinAngle * (uv.x - mid.x) + mid.y\n    );\n}\n\nvoid drawTiles(){\n    vec2    uv = gl_PointCoord.xy; \n    uv = rotateUV(uv , rotation,vec2(0.5) ) ;\n    uv/=0.5;\n    uv-=0.5;\n\n    if(uv.x < 0. || uv.x > 0. + 0.99999 || uv.y < 0. || uv.y > 0. + 0.99999) {\n         discard;\n         return;\n    }\n\n    vec2 spriteSize = vec2(32.,32.);\n    \n    float spnum =float(vid);\n  \n\n    float dx = spriteSize.x / float(width);\n    float dy = spriteSize.y / float(height);\n    \n    float cols = float(width) / spriteSize.x;\n    \n    float index = mod(spnum  , cols*cols);\n    // From linear index to row/col pair\n    float col = mod(index, cols);\n    float row = floor(index / cols);\n    uv = vec2(dx * uv.x + (col/cols) ,   dy * uv.y + (row/cols) );\n    int indx = int(texture(u_image, vec3(uv,floor(spnum/(cols*cols)))).a * 255.0) ;\n    if(indx == 0 )discard;\n    color=  vec4(palette[indx],1.0);\n}\n\n\nvoid main() {\n    drawTiles();\n}\n\n"],"names":["self","ReferenceError","instance","Constructor","TypeError","$e5f9bd0c37e9914c$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","$ac93fd2313270fd8$var$setPrototypeOf","o1","p1","setPrototypeOf","o","p","__proto__","subClass","superClass","create","constructor","value","$ac93fd2313270fd8$export$2e2bcd8739ae039","call","obj","Symbol","$08b63c45f54847ee$export$2e2bcd8739ae039","$fb222e0933d810ce$var$isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","$fb222e0933d810ce$var$construct","Parent1","args1","Class1","Parent","args","Class","a","push","apply","Function","bind","_setPrototypeOf","arguments","$7dc24fd3d8e84af6$var$getPrototypeOf","getPrototypeOf","$24ab38bdd93e1228$var$wrapNativeSuper","_cache","Map","undefined","fn","indexOf","has","get","set","Wrapper","$fb222e0933d810ce$export$2e2bcd8739ae039","$7dc24fd3d8e84af6$export$2e2bcd8739ae039","this","Derived","hasNativeReflectConstruct","Boolean","valueOf","$d60c94504fa4a111$export$2e2bcd8739ae039","result","Super","NewTarget","$87fe16ba8ff029a3$export$2e2bcd8739ae039","$9acdf72ee265eda5$var$ID","$9acdf72ee265eda5$var$arrayCacheF32","$9acdf72ee265eda5$export$b6c59b989905b650","gl","ref","vertex","fragment","_uniforms","uniforms","_transparent","transparent","_cullFace","cullFace","BACK","_frontFace","frontFace","CCW","_depthTest","depthTest","_depthWrite","depthWrite","_depthFunc","depthFunc","LESS","canvas","console","error","id","warn","blendFunc","blendEquation","src","renderer","premultipliedAlpha","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","concat","$9acdf72ee265eda5$var$addLineNumbers","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","uniformLocations","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","name","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","attributeLocations","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","location","getAttribLocation","attributeOrder","join","dst","srcAlpha","dstAlpha","modeRGB","modeAlpha","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","setBlendEquation","_flipFaces","flipFaces","textureUnit","programActive","currentProgram","useProgram","forEach","activeUniform","_this","$9acdf72ee265eda5$var$warn","texture","update","$9acdf72ee265eda5$var$setUniform","type","textureUnits","applyState","CW","deleteProgram","arrayLen","valueLen","Float32Array","$9acdf72ee265eda5$var$flatten","setValue","state","slice","b","l","$9acdf72ee265eda5$var$arraysEqual","$9acdf72ee265eda5$var$setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","$9acdf72ee265eda5$var$warnCount","message","$3916ee873ae37b05$export$f24224f1c91d8156","x","y","z","Math","sqrt","$3916ee873ae37b05$export$784d13d8ee351f07","out","$3916ee873ae37b05$export$adaa4cf7ef1b65be","$3916ee873ae37b05$export$e16d8520af44a096","$3916ee873ae37b05$export$4e2d2ead65e5f7e3","$3916ee873ae37b05$export$dcdf75081b88279d","$3916ee873ae37b05$export$ab44e1323ffc8376","$3916ee873ae37b05$export$aef51622e549b8b0","$3916ee873ae37b05$export$70ae2c07e401031b","$3916ee873ae37b05$export$a3295358bff77e","len","$3916ee873ae37b05$export$94132a0e348806d4","$3916ee873ae37b05$export$bb646b20bb93d339","ax","ay","az","bx","by","bz","tempA","tempB","$3916ee873ae37b05$export$944b09d2ad10b378","cosine","PI","acos","$1feb02469bae8422$export$838423f3adec30fa","Array","v","copy","va","vb","$3916ee873ae37b05$export$9f17032d917177de","$3916ee873ae37b05$export$88e6ebb4fe54f538","mat4","m","w","$3916ee873ae37b05$export$5ffbd13800309d59","$3916ee873ae37b05$export$58ce737ad0c12bc2","q","qx","qy","qz","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","$3916ee873ae37b05$export$c32adef9e939ce85","t","$3916ee873ae37b05$export$3a89f8d6f6bf6c9f","normalize","$80f48ebd8043c74c$var$tempVec3","$80f48ebd8043c74c$var$ID","$80f48ebd8043c74c$export$88530751e3977073","_canvas","document","createElement","_width","width","_height","height","_dpr","dpr","_alpha","alpha","_depth","depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_autoClear","autoClear","_webgl","webgl","attributes","color","getContext","isWebgl2","setSize","ZERO","FUNC_ADD","depthMask","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","activeTextureUnit","boundBuffer","extensions","getExtension","vertexAttribDivisor","drawArraysInstanced","drawElementsInstanced","createVertexArray","bindVertexArray","deleteVertexArray","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","assign","style","scissor","blendFuncSeparate","blendEquationSeparate","activeTexture","TEXTURE0","_target","FRAMEBUFFER","_buffer","buffer","bindFramebuffer","extension","webgl2Func","extFunc","renderOrder","zDepth","param","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","node","visible","draw","frustumCulled","frustumIntersectsMesh","opaque","ui","worldMatrix","getTranslation","applyMatrix4","projectionViewMatrix","sortOpaque","sortTransparent","sortUI","_update","_sort","_frustumCull","clear","setViewport","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","getRenderList","$05ac4bb7b867d9a7$export$2060d2db72cce88f","aw","bw","$05ac4bb7b867d9a7$export$6897c284b6f9f4dc","a0","a1","a2","a3","$05ac4bb7b867d9a7$export$94132a0e348806d4","invDot","$05ac4bb7b867d9a7$export$7679f47e72c62560","$05ac4bb7b867d9a7$export$784d13d8ee351f07","$05ac4bb7b867d9a7$export$adaa4cf7ef1b65be","$05ac4bb7b867d9a7$export$a3295358bff77e","$1701d862f1484e14$export$5edfe12bb88684c8","onChange","rad","sin","cos","$05ac4bb7b867d9a7$export$a59c8716592e09af","$05ac4bb7b867d9a7$export$cf71e4d4ca4d1cfd","$05ac4bb7b867d9a7$export$ea6eae3365de5b9c","qA","qB","matrix3","fRoot","fTrace","j","k","$05ac4bb7b867d9a7$export$272a1eb8e5a4b55b","euler","order","sx","cx","sy","cy","sz","cz","$05ac4bb7b867d9a7$export$7a404a587ea85af","axis","s","$05ac4bb7b867d9a7$export$4286ddefc8f49512","omega","cosom","sinom","scale0","scale1","$05ac4bb7b867d9a7$export$1544d9bc2995de08","$28deef93674b0f13$export$6897c284b6f9f4dc","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","$28deef93674b0f13$export$2060d2db72cce88f","b0","b1","b2","b3","$28deef93674b0f13$export$d73ee8ef04f5226a","$28deef93674b0f13$export$dcdf75081b88279d","$28deef93674b0f13$export$bb628a54ab399bc9","c","b12","b20","b21","b22","hypot","abs","$28deef93674b0f13$export$71dc54d92bd04b57","mat","m11","m12","m13","m21","m22","m23","m31","m32","m33","temp","$28deef93674b0f13$export$df3937d3b537df0a","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","$28deef93674b0f13$export$541149539f3a4684","fovy","aspect","near","far","f","tan","nf","$421348eb3bbac12b$export$21c0e3d5e995d7e1","m00","m01","m02","m03","m10","m20","m30","$28deef93674b0f13$export$adaa4cf7ef1b65be","ma","mb","fov","left","right","bottom","top","lr","bt","$28deef93674b0f13$export$4f2167e613cfc87b","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","$28deef93674b0f13$export$2ff2bbe382249af7","pos","scale","xy","xz","yz","$28deef93674b0f13$export$ddf9c55c9f2be172","max","$28deef93674b0f13$export$6276f53cd18ff805","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","$28deef93674b0f13$export$aa67782f4dc9e52c","$988f0ec4926b8e6e$export$48889b85f55f068c","asin","min","atan2","$1f83e877462d6ddb$var$tmpMat4","$1f83e877462d6ddb$export$d93cc409a0768c5f","fromQuaternion","fromRotationMatrix","$8b05f83bd08ccb65$export$563a914cafbdc389","parent","children","matrix","matrixAutoUpdate","position","quaternion","rotation","fromEuler","notifyParent","removeChild","addChild","child","notifyChild","setParent","splice","force","updateMatrix","worldMatrixNeedsUpdate","multiply","compose","callback","getRotation","getScaling","invert","lookAt","$a60f791a272ba282$export$adaa4cf7ef1b65be","$a60f791a272ba282$export$e16d8520af44a096","$a60f791a272ba282$export$4e2d2ead65e5f7e3","$a60f791a272ba282$export$dcdf75081b88279d","$a60f791a272ba282$export$f24224f1c91d8156","$a60f791a272ba282$export$aef51622e549b8b0","$a60f791a272ba282$export$70ae2c07e401031b","$a60f791a272ba282$export$bb646b20bb93d339","$3923eab166ce644e$export$ac4bca90992eed1","$a60f791a272ba282$export$9f17032d917177de","squaredDistance","$a60f791a272ba282$export$88e6ebb4fe54f538","$a60f791a272ba282$export$ab44e1323ffc8376","$a60f791a272ba282$export$a3295358bff77e","mat3","$a60f791a272ba282$export$f0bfa0a0024626ee","$a60f791a272ba282$export$5ffbd13800309d59","$a60f791a272ba282$export$3a89f8d6f6bf6c9f","$e85604418d6a95c9$var$emptyPixel","Uint8Array","$e85604418d6a95c9$var$isPowerOf2","$e85604418d6a95c9$var$ID","$e85604418d6a95c9$export$b7ba14ec3f632e98","image","TEXTURE_2D","_type","UNSIGNED_BYTE","_format","format","RGBA","_internalFormat","internalFormat","_wrapS","wrapS","CLAMP_TO_EDGE","_wrapT","wrapT","_generateMipmaps","generateMipmaps","_minFilter","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","_magFilter","magFilter","_premultiplyAlpha","_unpackAlignment","_flipY","_anisotropy","anisotropy","_level","level","_layers","layers","createTexture","store","glState","REPEAT","bindTexture","needsUpdate","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage3D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage3D","data","generateMipmap","onUpdate","i1","$0b5eaffe76340055$export$e30378e28ad3e6ab","$0b5eaffe76340055$var$gl","body","appendChild","clearColor","$0b5eaffe76340055$var$pan","$0b5eaffe76340055$var$uTime","$0b5eaffe76340055$var$resize","window","innerWidth","innerHeight","addEventListener","$0b5eaffe76340055$var$images","wa","fill","map","ind","floor","random","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","h","err","return","$0b5eaffe76340055$var$width","$0b5eaffe76340055$var$cols","$0b5eaffe76340055$var$layers","ceil","log","$0b5eaffe76340055$var$c","$0b5eaffe76340055$var$indx","_iteratorNormalCompletion1","_didIteratorError1","_iteratorError1","_step1","_iterator1","image1","$0b5eaffe76340055$var$tex","TEXTURE_2D_ARRAY","ALPHA","NEAREST","$0b5eaffe76340055$var$numVertices","$0b5eaffe76340055$var$program","$parcel$interopDefault","uTime","zoom","pan","u_image","numVerts","Error","requestAnimationFrame","$0b5eaffe76340055$var$update","use","drawArrays","POINTS"],"version":3,"file":"index.82603745.js.map"}