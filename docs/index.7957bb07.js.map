{"mappings":"imBAsBA,IAAuBA,EACDC,mJArBtB,IAAIC,EAAU,GAoBdF,WAlBkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,KAelCL,WAXiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,MCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,gGCAzD,MACMC,EADSC,SAASC,cAAc,aACPC,qCCC/BC,EAAiB,SAAUC,EAAWC,EAAQC,GAC5C,GAAID,IAAWE,KAAKC,SAASH,OAG3B,OAAOD,EAGP,IAAIK,EAASH,EAAQ,UAAYT,KAAKa,UAAUN,GAAa,IAAM,iBAAmBP,KAAKa,UAAUN,GAAa,KAClH,OAAOO,IAAIC,gBAAgB,IAAIC,KAAK,CAACJ,GAAS,CAC5CK,KAAM,6BCVZ,IAAIC,EAAG,IAAAJ,IAAuBhB,EAAA,SAAAqB,QAA6C,SAAOC,OAAAC,KAAAC,KAClFC,EAAiBjB,EAAUY,EAAIM,WAAYN,EAAIV,QAAQ,GFCvD,MAAMiB,EAAS,IAAIC,OAAMH,YAShBI,IACLF,EAAOG,YAAY,CAAEC,IAAK,SAAUC,MAAOC,OAAOC,WAAYC,OAAQF,OAAOG,cAHjFT,EAAOG,YAAY,CAAEC,IAAK,YAAaM,OAAQjC,eAF1B,KAE2D,CAACA,IAKjFyB,IAEAI,OAAOK,iBAAiB,SAAUT,GAAQ,GAE1C,MAAMU,EAAS,CACX,CACIP,MAAO,GACPnC,GAAG,EACH2C,KAAM,IAAIC,WAAW,CACjtC,CACIT,MAAO,EACPnC,GAAG,EACH2C,KAAM,IAAIC,WAAW,CACjB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EACrB,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAKjC,IAAK,IAAI9C,EAAI,EAAGA,EAAI,IAAOA,IACvB4C,EAAOG,KAAK,CACRV,MAAO,GACPnC,GAAGF,EAAE,EACL6C,KAAM,IAAIC,WAAW,MAASE,KAAK,GAAGC,KAAG,IAAOC,KAAKC,MAAsB,EAAhBD,KAAKE,cAIxEpB,EAAOG,YAAY,CAAEC,IAAK,4BAAsBQ,IAIhD,MAAMS,EAAa,IAAIC,aA/DF,KA+D6BN,KAAK,GAAGC,KAAG,CAAEM,EAAEC,IAAMA,EAAI,QAC3ExB,EAAOG,YAAY,CAAEC,IAAK,kBAAmBqB,IAAK,YAAaZ,KAAKQ","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-49921cc117c88f23.js","bootstrap.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/runtime-d78649e71400ef66.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"9etlm\\\":\\\"index.7957bb07.js\\\",\\\"49JnA\\\":\\\"world.70904a2e.js\\\"}\"));","const canvas = document.querySelector('#renderer');\nconst offscreenCanvas = canvas.transferControlToOffscreen();\n\nconst worker = new Worker(\n    new URL('src/world/index', import.meta.url),\n    { type: 'module' }\n);\n\nconst numparticles = 2000000;\n\nworker.postMessage({ msg: 'offscreen', canvas: offscreenCanvas, numparticles }, [offscreenCanvas]);\n\nfunction resize() {\n    worker.postMessage({ msg: 'resize', width: window.innerWidth, height: window.innerHeight });\n}\nresize()\n\nwindow.addEventListener('resize', resize, false)\n\nconst images = [\n    {\n        width: 11,\n        id:0,\n        data: new Uint8Array([\n            0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1,\n            0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1,\n            1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1,\n            1, 0, 2, 0, 0, 2, 0, 1, 0, 1, 1,\n            1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1,\n            1, 0, 3, 3, 3, 3, 0, 1, 0, 1, 1,\n            0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1,\n            0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1,\n            0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0,\n            0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1,\n            0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1,\n            1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1,\n            1, 0, 2, 0, 0, 2, 0, 1, 0, 1, 1,\n            1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 1,\n            1, 0, 3, 3, 3, 3, 0, 1, 0, 1, 1,\n            0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1,\n            0, 0, 1, 1, 1, 1, 0, 0, 0, 1, 1,\n            0, 0, 1, 1, 1, 1, 0, 0, 1, 1, 0\n        ])\n    },\n    {\n        width: 8,\n        id:1,\n        data: new Uint8Array([\n            5, 5, 5, 5, 5, 5, 5, 5,\n            5, 5, 5, 5, 5, 5, 5, 5,\n            5, 5, 5, 5, 5, 5, 5, 5,\n            5, 5, 5, 5, 5, 5, 5, 5,\n            5, 5, 5, 5, 5, 5, 5, 5,\n            5, 5, 5, 5, 5, 5, 5, 5,\n            5, 5, 5, 5, 5, 5, 5, 5\n        ])\n\n    }];\n\nfor (let i = 0; i < 20000; i++) {\n    images.push({\n        width: 32,\n        id:i+2,\n        data: new Uint8Array(32 * 32).fill(0).map(() => Math.floor(Math.random() * 7))\n    })\n}\n\nworker.postMessage({ msg: 'uploadTextureBatch', images });\n\n// 0...numparticles in array\n//const data = new Float32Array([...Array(numparticles).keys()]);\nconst textureIds = new Float32Array(numparticles).fill(0).map((v,i) => i % 20002);\nworker.postMessage({ msg: 'updateAttribute', key: \"textureId\", data:textureIds });","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"49JnA\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$843c8e561e10013b$var$offscreenCanvas","document","querySelector","transferControlToOffscreen","$cfc619e94ff51e3f$exports","workerUrl","origin","isESM","self","location","source","stringify","URL","createObjectURL","Blob","type","$02bffe43e04856c6$var$url","resolve","import","meta","url","$02bffe43e04856c6$exports","toString","$843c8e561e10013b$var$worker","Worker","$843c8e561e10013b$var$resize","postMessage","msg","width","window","innerWidth","height","innerHeight","canvas","addEventListener","$843c8e561e10013b$var$images","data","Uint8Array","push","fill","map","Math","floor","random","$843c8e561e10013b$var$textureIds","Float32Array","v","i1","key"],"version":3,"file":"index.7957bb07.js.map"}