{"mappings":"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","sources":["node_modules/@swc/helpers/src/_assert_this_initialized.js","node_modules/@swc/helpers/src/_class_call_check.js","node_modules/@swc/helpers/src/_create_class.js","node_modules/@swc/helpers/src/_set_prototype_of.js","node_modules/@swc/helpers/src/_inherits.js","node_modules/@swc/helpers/src/_possible_constructor_return.js","node_modules/@swc/helpers/src/_type_of.js","node_modules/@swc/helpers/src/_construct.js","node_modules/@swc/helpers/src/_get_prototype_of.js","node_modules/@swc/helpers/src/_wrap_native_super.js","node_modules/@swc/helpers/src/_is_native_function.js","node_modules/@swc/helpers/src/_create_super.js","node_modules/@swc/helpers/src/_is_native_reflect_construct.js","node_modules/ogl/src/math/functions/Vec3Func.js","node_modules/ogl/src/math/Vec3.js","node_modules/ogl/src/core/Geometry.js","node_modules/ogl/src/core/Program.js","node_modules/ogl/src/core/Renderer.js","node_modules/ogl/src/math/functions/QuatFunc.js","node_modules/ogl/src/math/functions/Vec4Func.js","node_modules/ogl/src/math/Quat.js","node_modules/ogl/src/math/functions/Mat4Func.js","node_modules/ogl/src/math/Mat4.js","node_modules/ogl/src/math/functions/EulerFunc.js","node_modules/ogl/src/math/Euler.js","node_modules/ogl/src/core/Transform.js","node_modules/ogl/src/math/functions/Vec2Func.js","node_modules/ogl/src/math/Vec2.js","src/texture3D.js","node_modules/stats.js/build/stats.min.js","src/world/index.js","src/shaders/main.vert","src/shaders/main.frag"],"sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n","function setPrototypeOf(o, p) {\n  setPrototypeOf = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return setPrototypeOf(o, p);\n}\n\nexport default function _setPrototypeOf(o, p) {\n  return setPrototypeOf(o, p);\n}\n","import setPrototypeOf from './_set_prototype_of';\n\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n","import assertThisInitialized from './_assert_this_initialized';\nimport _typeof from './_type_of';\n\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n","export default function _typeof(obj) {\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n","function isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () { }));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    construct = Reflect.construct;\n  } else {\n    construct = function construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return construct.apply(null, arguments);\n}\n\nexport default function _construct(Parent, args, Class) {\n  return construct.apply(null, arguments);\n}","function getPrototypeOf(o) {\n  getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return getPrototypeOf(o);\n}\n\nexport default function _getPrototypeOf(o) {\n  return getPrototypeOf(o);\n}","import construct from './_construct';\nimport isNativeFunction from './_is_native_function';\nimport getPrototypeOf from './_get_prototype_of';\nimport setPrototypeOf from './_set_prototype_of';\n\nfunction wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  wrapNativeSuper = function wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return wrapNativeSuper(Class);\n}\n\nexport default function _wrapNativeSuper(Class) {\n  return wrapNativeSuper(Class);\n}\n","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n","import _isNativeReflectConstruct from \"./_is_native_reflect_construct\";\nimport _getPrototypeOf from \"./_get_prototype_of\";\nimport _possibleConstructorReturn from './_possible_constructor_return';\n\nexport default function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n        var Super = _getPrototypeOf(Derived),\n            result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = _getPrototypeOf(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return _possibleConstructorReturn(this, result);\n    };\n}","export default function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () { }));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}","const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n// TODO: when would I disableVertexAttribArray ?\n// TODO: use offset/stride if exists\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n\n        if (!attr.buffer) {\n            attr.buffer = this.gl.createBuffer();\n\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        this.gl.bufferData(attr.target, attr.data, this.gl.STATIC_DRAW);\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * numLoc;\n            const offset = numLoc === 1 ? 0 : numLoc * numLoc;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * 2,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPosition() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        // if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const offset = attr.offset || 0;\n        const stride = attr.stride || attr.size;\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = offset, l = array.length; i < l; i += stride) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const offset = attr.offset || 0;\n        const stride = attr.stride || attr.size;\n\n        if (!this.bounds) this.computeBoundingBox(attr);\n\n        let maxRadiusSq = 0;\n        for (let i = offset, l = array.length; i < l; i += stride) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        for (let key in this.VAOs) {\n            this.gl.renderer.deleteVertexArray(this.VAOs[key]);\n            delete this.VAOs[key];\n        }\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LESS,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as fist argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n\n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) this.gl = canvas.getContext('webgl', attributes);\n        if (!this.gl) console.error('unable to create webgl context');\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { x: 0, y: 0, width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height, x = 0, y = 0) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.state.viewport.x = x;\n        this.state.viewport.y = y;\n        this.gl.viewport(x, y, width, height);\n    }\n\n    setScissor(width, height, x = 0, y = 0) {\n        this.gl.scissor(x, y, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","import * as vec4 from './Vec4Func.js';\n\n/**\n * Set a quat to the identity quaternion\n *\n * @param {quat} out the receiving quaternion\n * @returns {quat} out\n */\nexport function identity(out) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 1;\n    return out;\n}\n\n/**\n * Sets a quat from the given angle and rotation axis,\n * then returns it.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} axis the axis around which to rotate\n * @param {Number} rad the angle in radians\n * @returns {quat} out\n **/\nexport function setAxisAngle(out, axis, rad) {\n    rad = rad * 0.5;\n    let s = Math.sin(rad);\n    out[0] = s * axis[0];\n    out[1] = s * axis[1];\n    out[2] = s * axis[2];\n    out[3] = Math.cos(rad);\n    return out;\n}\n\n/**\n * Multiplies two quats\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n */\nexport function multiply(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    out[0] = ax * bw + aw * bx + ay * bz - az * by;\n    out[1] = ay * bw + aw * by + az * bx - ax * bz;\n    out[2] = az * bw + aw * bz + ax * by - ay * bx;\n    out[3] = aw * bw - ax * bx - ay * by - az * bz;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the X axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateX(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + aw * bx;\n    out[1] = ay * bw + az * bx;\n    out[2] = az * bw - ay * bx;\n    out[3] = aw * bw - ax * bx;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Y axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateY(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let by = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw - az * by;\n    out[1] = ay * bw + aw * by;\n    out[2] = az * bw + ax * by;\n    out[3] = aw * bw - ay * by;\n    return out;\n}\n\n/**\n * Rotates a quaternion by the given angle about the Z axis\n *\n * @param {quat} out quat receiving operation result\n * @param {quat} a quat to rotate\n * @param {number} rad angle (in radians) to rotate\n * @returns {quat} out\n */\nexport function rotateZ(out, a, rad) {\n    rad *= 0.5;\n\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bz = Math.sin(rad),\n        bw = Math.cos(rad);\n\n    out[0] = ax * bw + ay * bz;\n    out[1] = ay * bw - ax * bz;\n    out[2] = az * bw + aw * bz;\n    out[3] = aw * bw - az * bz;\n    return out;\n}\n\n/**\n * Performs a spherical linear interpolation between two quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n */\nexport function slerp(out, a, b, t) {\n    // benchmarks:\n    //    http://jsperf.com/quaternion-slerp-implementations\n    let ax = a[0],\n        ay = a[1],\n        az = a[2],\n        aw = a[3];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2],\n        bw = b[3];\n\n    let omega, cosom, sinom, scale0, scale1;\n\n    // calc cosine\n    cosom = ax * bx + ay * by + az * bz + aw * bw;\n    // adjust signs (if necessary)\n    if (cosom < 0.0) {\n        cosom = -cosom;\n        bx = -bx;\n        by = -by;\n        bz = -bz;\n        bw = -bw;\n    }\n    // calculate coefficients\n    if (1.0 - cosom > 0.000001) {\n        // standard case (slerp)\n        omega = Math.acos(cosom);\n        sinom = Math.sin(omega);\n        scale0 = Math.sin((1.0 - t) * omega) / sinom;\n        scale1 = Math.sin(t * omega) / sinom;\n    } else {\n        // \"from\" and \"to\" quaternions are very close\n        //  ... so we can do a linear interpolation\n        scale0 = 1.0 - t;\n        scale1 = t;\n    }\n    // calculate final values\n    out[0] = scale0 * ax + scale1 * bx;\n    out[1] = scale0 * ay + scale1 * by;\n    out[2] = scale0 * az + scale1 * bz;\n    out[3] = scale0 * aw + scale1 * bw;\n\n    return out;\n}\n\n/**\n * Calculates the inverse of a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate inverse of\n * @returns {quat} out\n */\nexport function invert(out, a) {\n    let a0 = a[0],\n        a1 = a[1],\n        a2 = a[2],\n        a3 = a[3];\n    let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\n    let invDot = dot ? 1.0 / dot : 0;\n\n    // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\n\n    out[0] = -a0 * invDot;\n    out[1] = -a1 * invDot;\n    out[2] = -a2 * invDot;\n    out[3] = a3 * invDot;\n    return out;\n}\n\n/**\n * Calculates the conjugate of a quat\n * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quat to calculate conjugate of\n * @returns {quat} out\n */\nexport function conjugate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Creates a quaternion from the given 3x3 rotation matrix.\n *\n * NOTE: The resultant quaternion is not normalized, so you should be sure\n * to renormalize the quaternion yourself where necessary.\n *\n * @param {quat} out the receiving quaternion\n * @param {mat3} m rotation matrix\n * @returns {quat} out\n * @function\n */\nexport function fromMat3(out, m) {\n    // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\n    // article \"Quaternion Calculus and Fast Animation\".\n    let fTrace = m[0] + m[4] + m[8];\n    let fRoot;\n\n    if (fTrace > 0.0) {\n        // |w| > 1/2, may as well choose w > 1/2\n        fRoot = Math.sqrt(fTrace + 1.0); // 2w\n        out[3] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot; // 1/(4w)\n        out[0] = (m[5] - m[7]) * fRoot;\n        out[1] = (m[6] - m[2]) * fRoot;\n        out[2] = (m[1] - m[3]) * fRoot;\n    } else {\n        // |w| <= 1/2\n        let i = 0;\n        if (m[4] > m[0]) i = 1;\n        if (m[8] > m[i * 3 + i]) i = 2;\n        let j = (i + 1) % 3;\n        let k = (i + 2) % 3;\n\n        fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\n        out[i] = 0.5 * fRoot;\n        fRoot = 0.5 / fRoot;\n        out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\n        out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\n        out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\n    }\n\n    return out;\n}\n\n/**\n * Creates a quaternion from the given euler angle x, y, z.\n *\n * @param {quat} out the receiving quaternion\n * @param {vec3} euler Angles to rotate around each axis in degrees.\n * @param {String} order detailing order of operations. Default 'XYZ'.\n * @returns {quat} out\n * @function\n */\nexport function fromEuler(out, euler, order = 'YXZ') {\n    let sx = Math.sin(euler[0] * 0.5);\n    let cx = Math.cos(euler[0] * 0.5);\n    let sy = Math.sin(euler[1] * 0.5);\n    let cy = Math.cos(euler[1] * 0.5);\n    let sz = Math.sin(euler[2] * 0.5);\n    let cz = Math.cos(euler[2] * 0.5);\n\n    if (order === 'XYZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'YXZ') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'ZXY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'ZYX') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    } else if (order === 'YZX') {\n        out[0] = sx * cy * cz + cx * sy * sz;\n        out[1] = cx * sy * cz + sx * cy * sz;\n        out[2] = cx * cy * sz - sx * sy * cz;\n        out[3] = cx * cy * cz - sx * sy * sz;\n    } else if (order === 'XZY') {\n        out[0] = sx * cy * cz - cx * sy * sz;\n        out[1] = cx * sy * cz - sx * cy * sz;\n        out[2] = cx * cy * sz + sx * sy * cz;\n        out[3] = cx * cy * cz + sx * sy * sz;\n    }\n\n    return out;\n}\n\n/**\n * Copy the values from one quat to another\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the source quaternion\n * @returns {quat} out\n * @function\n */\nexport const copy = vec4.copy;\n\n/**\n * Set the components of a quat to the given values\n *\n * @param {quat} out the receiving quaternion\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {quat} out\n * @function\n */\nexport const set = vec4.set;\n\n/**\n * Adds two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {quat} out\n * @function\n */\nexport const add = vec4.add;\n\n/**\n * Scales a quat by a scalar number\n *\n * @param {quat} out the receiving vector\n * @param {quat} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {quat} out\n * @function\n */\nexport const scale = vec4.scale;\n\n/**\n * Calculates the dot product of two quat's\n *\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @returns {Number} dot product of a and b\n * @function\n */\nexport const dot = vec4.dot;\n\n/**\n * Performs a linear interpolation between two quat's\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a the first operand\n * @param {quat} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {quat} out\n * @function\n */\nexport const lerp = vec4.lerp;\n\n/**\n * Calculates the length of a quat\n *\n * @param {quat} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport const length = vec4.length;\n\n/**\n * Normalize a quat\n *\n * @param {quat} out the receiving quaternion\n * @param {quat} a quaternion to normalize\n * @returns {quat} out\n * @function\n */\nexport const normalize = vec4.normalize;\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec4 to another\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the source vector\n * @returns {vec4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    return out;\n}\n\n/**\n * Set the components of a vec4 to the given values\n *\n * @param {vec4} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @param {Number} w W component\n * @returns {vec4} out\n */\nexport function set(out, x, y, z, w) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    out[3] = w;\n    return out;\n}\n\n/**\n * Adds two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {vec4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    return out;\n}\n\n/**\n * Scales a vec4 by a scalar number\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec4} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    return out;\n}\n\n/**\n * Calculates the length of a vec4\n *\n * @param {vec4} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    return Math.sqrt(x * x + y * y + z * z + w * w);\n}\n\n/**\n * Normalize a vec4\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a vector to normalize\n * @returns {vec4} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let w = a[3];\n    let len = x * x + y * y + z * z + w * w;\n    if (len > 0) {\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = x * len;\n    out[1] = y * len;\n    out[2] = z * len;\n    out[3] = w * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec4's\n *\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n}\n\n/**\n * Performs a linear interpolation between two vec4's\n *\n * @param {vec4} out the receiving vector\n * @param {vec4} a the first operand\n * @param {vec4} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec4} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    let aw = a[3];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    out[3] = aw + t * (b[3] - aw);\n    return out;\n}\n","import * as QuatFunc from './functions/QuatFunc.js';\n\nexport class Quat extends Array {\n    constructor(x = 0, y = 0, z = 0, w = 1) {\n        super(x, y, z, w);\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    get w() {\n        return this[3];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set w(v) {\n        this[3] = v;\n        this.onChange();\n    }\n\n    identity() {\n        QuatFunc.identity(this);\n        this.onChange();\n        return this;\n    }\n\n    set(x, y, z, w) {\n        if (x.length) return this.copy(x);\n        QuatFunc.set(this, x, y, z, w);\n        this.onChange();\n        return this;\n    }\n\n    rotateX(a) {\n        QuatFunc.rotateX(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateY(a) {\n        QuatFunc.rotateY(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    rotateZ(a) {\n        QuatFunc.rotateZ(this, this, a);\n        this.onChange();\n        return this;\n    }\n\n    inverse(q = this) {\n        QuatFunc.invert(this, q);\n        this.onChange();\n        return this;\n    }\n\n    conjugate(q = this) {\n        QuatFunc.conjugate(this, q);\n        this.onChange();\n        return this;\n    }\n\n    copy(q) {\n        QuatFunc.copy(this, q);\n        this.onChange();\n        return this;\n    }\n\n    normalize(q = this) {\n        QuatFunc.normalize(this, q);\n        this.onChange();\n        return this;\n    }\n\n    multiply(qA, qB) {\n        if (qB) {\n            QuatFunc.multiply(this, qA, qB);\n        } else {\n            QuatFunc.multiply(this, this, qA);\n        }\n        this.onChange();\n        return this;\n    }\n\n    dot(v) {\n        return QuatFunc.dot(this, v);\n    }\n\n    fromMatrix3(matrix3) {\n        QuatFunc.fromMat3(this, matrix3);\n        this.onChange();\n        return this;\n    }\n\n    fromEuler(euler) {\n        QuatFunc.fromEuler(this, euler, euler.order);\n        return this;\n    }\n\n    fromAxisAngle(axis, a) {\n        QuatFunc.setAxisAngle(this, axis, a);\n        return this;\n    }\n\n    slerp(q, t) {\n        QuatFunc.slerp(this, this, q, t);\n        return this;\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        return a;\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n    out[0] = m00;\n    out[1] = m01;\n    out[2] = m02;\n    out[3] = m03;\n    out[4] = m10;\n    out[5] = m11;\n    out[6] = m12;\n    out[7] = m13;\n    out[8] = m20;\n    out[9] = m21;\n    out[10] = m22;\n    out[11] = m23;\n    out[12] = m30;\n    out[13] = m31;\n    out[14] = m32;\n    out[15] = m33;\n    return out;\n}\n\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\nexport function identity(out) {\n    out[0] = 1;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = 1;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 1;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function transpose(out, a) {\n    // If we are transposing ourselves we can skip a few steps but have to cache some values\n    if (out === a) {\n        let a01 = a[1],\n            a02 = a[2],\n            a03 = a[3];\n        let a12 = a[6],\n            a13 = a[7];\n        let a23 = a[11];\n\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a01;\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a02;\n        out[9] = a12;\n        out[11] = a[14];\n        out[12] = a03;\n        out[13] = a13;\n        out[14] = a23;\n    } else {\n        out[0] = a[0];\n        out[1] = a[4];\n        out[2] = a[8];\n        out[3] = a[12];\n        out[4] = a[1];\n        out[5] = a[5];\n        out[6] = a[9];\n        out[7] = a[13];\n        out[8] = a[2];\n        out[9] = a[6];\n        out[10] = a[10];\n        out[11] = a[14];\n        out[12] = a[3];\n        out[13] = a[7];\n        out[14] = a[11];\n        out[15] = a[15];\n    }\n\n    return out;\n}\n\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the source matrix\n * @returns {mat4} out\n */\nexport function invert(out, a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n    if (!det) {\n        return null;\n    }\n    det = 1.0 / det;\n\n    out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n    out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n    out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n    out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n    out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n    out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n    out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n    out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n    out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n    out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n    out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n    out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n    out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n    out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n    out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n    out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n\n    return out;\n}\n\n/**\n * Calculates the determinant of a mat4\n *\n * @param {mat4} a the source matrix\n * @returns {Number} determinant of a\n */\nexport function determinant(a) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    let b00 = a00 * a11 - a01 * a10;\n    let b01 = a00 * a12 - a02 * a10;\n    let b02 = a00 * a13 - a03 * a10;\n    let b03 = a01 * a12 - a02 * a11;\n    let b04 = a01 * a13 - a03 * a11;\n    let b05 = a02 * a13 - a03 * a12;\n    let b06 = a20 * a31 - a21 * a30;\n    let b07 = a20 * a32 - a22 * a30;\n    let b08 = a20 * a33 - a23 * a30;\n    let b09 = a21 * a32 - a22 * a31;\n    let b10 = a21 * a33 - a23 * a31;\n    let b11 = a22 * a33 - a23 * a32;\n\n    // Calculate the determinant\n    return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function multiply(out, a, b) {\n    let a00 = a[0],\n        a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    let a10 = a[4],\n        a11 = a[5],\n        a12 = a[6],\n        a13 = a[7];\n    let a20 = a[8],\n        a21 = a[9],\n        a22 = a[10],\n        a23 = a[11];\n    let a30 = a[12],\n        a31 = a[13],\n        a32 = a[14],\n        a33 = a[15];\n\n    // Cache only the current line of the second matrix\n    let b0 = b[0],\n        b1 = b[1],\n        b2 = b[2],\n        b3 = b[3];\n    out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[4];\n    b1 = b[5];\n    b2 = b[6];\n    b3 = b[7];\n    out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[8];\n    b1 = b[9];\n    b2 = b[10];\n    b3 = b[11];\n    out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n\n    b0 = b[12];\n    b1 = b[13];\n    b2 = b[14];\n    b3 = b[15];\n    out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n    out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n    out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n    out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n    return out;\n}\n\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to translate\n * @param {vec3} v vector to translate by\n * @returns {mat4} out\n */\nexport function translate(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n\n    if (a === out) {\n        out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n        out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n        out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n        out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n    } else {\n        a00 = a[0];\n        a01 = a[1];\n        a02 = a[2];\n        a03 = a[3];\n        a10 = a[4];\n        a11 = a[5];\n        a12 = a[6];\n        a13 = a[7];\n        a20 = a[8];\n        a21 = a[9];\n        a22 = a[10];\n        a23 = a[11];\n\n        out[0] = a00;\n        out[1] = a01;\n        out[2] = a02;\n        out[3] = a03;\n        out[4] = a10;\n        out[5] = a11;\n        out[6] = a12;\n        out[7] = a13;\n        out[8] = a20;\n        out[9] = a21;\n        out[10] = a22;\n        out[11] = a23;\n\n        out[12] = a00 * x + a10 * y + a20 * z + a[12];\n        out[13] = a01 * x + a11 * y + a21 * z + a[13];\n        out[14] = a02 * x + a12 * y + a22 * z + a[14];\n        out[15] = a03 * x + a13 * y + a23 * z + a[15];\n    }\n\n    return out;\n}\n\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {vec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\nexport function scale(out, a, v) {\n    let x = v[0],\n        y = v[1],\n        z = v[2];\n\n    out[0] = a[0] * x;\n    out[1] = a[1] * x;\n    out[2] = a[2] * x;\n    out[3] = a[3] * x;\n    out[4] = a[4] * y;\n    out[5] = a[5] * y;\n    out[6] = a[6] * y;\n    out[7] = a[7] * y;\n    out[8] = a[8] * z;\n    out[9] = a[9] * z;\n    out[10] = a[10] * z;\n    out[11] = a[11] * z;\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n    return out;\n}\n\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {vec3} axis the axis to rotate around\n * @returns {mat4} out\n */\nexport function rotate(out, a, rad, axis) {\n    let x = axis[0],\n        y = axis[1],\n        z = axis[2];\n    let len = Math.hypot(x, y, z);\n    let s, c, t;\n    let a00, a01, a02, a03;\n    let a10, a11, a12, a13;\n    let a20, a21, a22, a23;\n    let b00, b01, b02;\n    let b10, b11, b12;\n    let b20, b21, b22;\n\n    if (Math.abs(len) < EPSILON) {\n        return null;\n    }\n\n    len = 1 / len;\n    x *= len;\n    y *= len;\n    z *= len;\n\n    s = Math.sin(rad);\n    c = Math.cos(rad);\n    t = 1 - c;\n\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n\n    // Construct the elements of the rotation matrix\n    b00 = x * x * t + c;\n    b01 = y * x * t + z * s;\n    b02 = z * x * t - y * s;\n    b10 = x * y * t - z * s;\n    b11 = y * y * t + c;\n    b12 = z * y * t + x * s;\n    b20 = x * z * t + y * s;\n    b21 = y * z * t - x * s;\n    b22 = z * z * t + c;\n\n    // Perform rotation-specific matrix multiplication\n    out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n    out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n    out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n    out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n    out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n    out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n    out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n    out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n    out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n    out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n    out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n    out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n    if (a !== out) {\n        // If the source and destination differ, copy the unchanged last row\n        out[12] = a[12];\n        out[13] = a[13];\n        out[14] = a[14];\n        out[15] = a[15];\n    }\n    return out;\n}\n\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getTranslation(out, mat) {\n    out[0] = mat[12];\n    out[1] = mat[13];\n    out[2] = mat[14];\n\n    return out;\n}\n\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {mat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\nexport function getScaling(out, mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    out[0] = Math.hypot(m11, m12, m13);\n    out[1] = Math.hypot(m21, m22, m23);\n    out[2] = Math.hypot(m31, m32, m33);\n\n    return out;\n}\n\nexport function getMaxScaleOnAxis(mat) {\n    let m11 = mat[0];\n    let m12 = mat[1];\n    let m13 = mat[2];\n    let m21 = mat[4];\n    let m22 = mat[5];\n    let m23 = mat[6];\n    let m31 = mat[8];\n    let m32 = mat[9];\n    let m33 = mat[10];\n\n    const x = m11 * m11 + m12 * m12 + m13 * m13;\n    const y = m21 * m21 + m22 * m22 + m23 * m23;\n    const z = m31 * m31 + m32 * m32 + m33 * m33;\n\n    return Math.sqrt(Math.max(x, y, z));\n}\n\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {mat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\nexport const getRotation = (function () {\n    const temp = [0, 0, 0];\n\n    return function (out, mat) {\n        let scaling = temp;\n        getScaling(scaling, mat);\n\n        let is1 = 1 / scaling[0];\n        let is2 = 1 / scaling[1];\n        let is3 = 1 / scaling[2];\n\n        let sm11 = mat[0] * is1;\n        let sm12 = mat[1] * is2;\n        let sm13 = mat[2] * is3;\n        let sm21 = mat[4] * is1;\n        let sm22 = mat[5] * is2;\n        let sm23 = mat[6] * is3;\n        let sm31 = mat[8] * is1;\n        let sm32 = mat[9] * is2;\n        let sm33 = mat[10] * is3;\n\n        let trace = sm11 + sm22 + sm33;\n        let S = 0;\n\n        if (trace > 0) {\n            S = Math.sqrt(trace + 1.0) * 2;\n            out[3] = 0.25 * S;\n            out[0] = (sm23 - sm32) / S;\n            out[1] = (sm31 - sm13) / S;\n            out[2] = (sm12 - sm21) / S;\n        } else if (sm11 > sm22 && sm11 > sm33) {\n            S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n            out[3] = (sm23 - sm32) / S;\n            out[0] = 0.25 * S;\n            out[1] = (sm12 + sm21) / S;\n            out[2] = (sm31 + sm13) / S;\n        } else if (sm22 > sm33) {\n            S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n            out[3] = (sm31 - sm13) / S;\n            out[0] = (sm12 + sm21) / S;\n            out[1] = 0.25 * S;\n            out[2] = (sm23 + sm32) / S;\n        } else {\n            S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n            out[3] = (sm12 - sm21) / S;\n            out[0] = (sm31 + sm13) / S;\n            out[1] = (sm23 + sm32) / S;\n            out[2] = 0.25 * S;\n        }\n\n        return out;\n    };\n})();\n\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {vec3} v Translation vector\n * @param {vec3} s Scaling vector\n * @returns {mat4} out\n */\nexport function fromRotationTranslationScale(out, q, v, s) {\n    // Quaternion math\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let xy = x * y2;\n    let xz = x * z2;\n    let yy = y * y2;\n    let yz = y * z2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n    let sx = s[0];\n    let sy = s[1];\n    let sz = s[2];\n\n    out[0] = (1 - (yy + zz)) * sx;\n    out[1] = (xy + wz) * sx;\n    out[2] = (xz - wy) * sx;\n    out[3] = 0;\n    out[4] = (xy - wz) * sy;\n    out[5] = (1 - (xx + zz)) * sy;\n    out[6] = (yz + wx) * sy;\n    out[7] = 0;\n    out[8] = (xz + wy) * sz;\n    out[9] = (yz - wx) * sz;\n    out[10] = (1 - (xx + yy)) * sz;\n    out[11] = 0;\n    out[12] = v[0];\n    out[13] = v[1];\n    out[14] = v[2];\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\nexport function fromQuat(out, q) {\n    let x = q[0],\n        y = q[1],\n        z = q[2],\n        w = q[3];\n    let x2 = x + x;\n    let y2 = y + y;\n    let z2 = z + z;\n\n    let xx = x * x2;\n    let yx = y * x2;\n    let yy = y * y2;\n    let zx = z * x2;\n    let zy = z * y2;\n    let zz = z * z2;\n    let wx = w * x2;\n    let wy = w * y2;\n    let wz = w * z2;\n\n    out[0] = 1 - yy - zz;\n    out[1] = yx + wz;\n    out[2] = zx - wy;\n    out[3] = 0;\n\n    out[4] = yx - wz;\n    out[5] = 1 - xx - zz;\n    out[6] = zy + wx;\n    out[7] = 0;\n\n    out[8] = zx + wy;\n    out[9] = zy - wx;\n    out[10] = 1 - xx - yy;\n    out[11] = 0;\n\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n    out[15] = 1;\n\n    return out;\n}\n\n/**\n * Generates a perspective projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function perspective(out, fovy, aspect, near, far) {\n    let f = 1.0 / Math.tan(fovy / 2);\n    let nf = 1 / (near - far);\n    out[0] = f / aspect;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = f;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = (far + near) * nf;\n    out[11] = -1;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 2 * far * near * nf;\n    out[15] = 0;\n    return out;\n}\n\n/**\n * Generates a orthogonal projection matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\nexport function ortho(out, left, right, bottom, top, near, far) {\n    let lr = 1 / (left - right);\n    let bt = 1 / (bottom - top);\n    let nf = 1 / (near - far);\n    out[0] = -2 * lr;\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[5] = -2 * bt;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[10] = 2 * nf;\n    out[11] = 0;\n    out[12] = (left + right) * lr;\n    out[13] = (top + bottom) * bt;\n    out[14] = (far + near) * nf;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {vec3} eye Position of the viewer\n * @param {vec3} target Point the viewer is looking at\n * @param {vec3} up vec3 pointing up\n * @returns {mat4} out\n */\nexport function targetTo(out, eye, target, up) {\n    let eyex = eye[0],\n        eyey = eye[1],\n        eyez = eye[2],\n        upx = up[0],\n        upy = up[1],\n        upz = up[2];\n\n    let z0 = eyex - target[0],\n        z1 = eyey - target[1],\n        z2 = eyez - target[2];\n\n    let len = z0 * z0 + z1 * z1 + z2 * z2;\n    if (len === 0) {\n        // eye and target are in the same position\n        z2 = 1;\n    } else {\n        len = 1 / Math.sqrt(len);\n        z0 *= len;\n        z1 *= len;\n        z2 *= len;\n    }\n\n    let x0 = upy * z2 - upz * z1,\n        x1 = upz * z0 - upx * z2,\n        x2 = upx * z1 - upy * z0;\n\n    len = x0 * x0 + x1 * x1 + x2 * x2;\n    if (len === 0) {\n        // up and z are parallel\n        if (upz) {\n            upx += 1e-6;\n        } else if (upy) {\n            upz += 1e-6;\n        } else {\n            upy += 1e-6;\n        }\n        (x0 = upy * z2 - upz * z1), (x1 = upz * z0 - upx * z2), (x2 = upx * z1 - upy * z0);\n\n        len = x0 * x0 + x1 * x1 + x2 * x2;\n    }\n\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n\n    out[0] = x0;\n    out[1] = x1;\n    out[2] = x2;\n    out[3] = 0;\n    out[4] = z1 * x2 - z2 * x1;\n    out[5] = z2 * x0 - z0 * x2;\n    out[6] = z0 * x1 - z1 * x0;\n    out[7] = 0;\n    out[8] = z0;\n    out[9] = z1;\n    out[10] = z2;\n    out[11] = 0;\n    out[12] = eyex;\n    out[13] = eyey;\n    out[14] = eyez;\n    out[15] = 1;\n    return out;\n}\n\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    out[3] = a[3] + b[3];\n    out[4] = a[4] + b[4];\n    out[5] = a[5] + b[5];\n    out[6] = a[6] + b[6];\n    out[7] = a[7] + b[7];\n    out[8] = a[8] + b[8];\n    out[9] = a[9] + b[9];\n    out[10] = a[10] + b[10];\n    out[11] = a[11] + b[11];\n    out[12] = a[12] + b[12];\n    out[13] = a[13] + b[13];\n    out[14] = a[14] + b[14];\n    out[15] = a[15] + b[15];\n    return out;\n}\n\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the first operand\n * @param {mat4} b the second operand\n * @returns {mat4} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    out[3] = a[3] - b[3];\n    out[4] = a[4] - b[4];\n    out[5] = a[5] - b[5];\n    out[6] = a[6] - b[6];\n    out[7] = a[7] - b[7];\n    out[8] = a[8] - b[8];\n    out[9] = a[9] - b[9];\n    out[10] = a[10] - b[10];\n    out[11] = a[11] - b[11];\n    out[12] = a[12] - b[12];\n    out[13] = a[13] - b[13];\n    out[14] = a[14] - b[14];\n    out[15] = a[15] - b[15];\n    return out;\n}\n\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {mat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\nexport function multiplyScalar(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    out[3] = a[3] * b;\n    out[4] = a[4] * b;\n    out[5] = a[5] * b;\n    out[6] = a[6] * b;\n    out[7] = a[7] * b;\n    out[8] = a[8] * b;\n    out[9] = a[9] * b;\n    out[10] = a[10] * b;\n    out[11] = a[11] * b;\n    out[12] = a[12] * b;\n    out[13] = a[13] * b;\n    out[14] = a[14] * b;\n    out[15] = a[15] * b;\n    return out;\n}\n","import * as Mat4Func from './functions/Mat4Func.js';\n\nexport class Mat4 extends Array {\n    constructor(\n        m00 = 1,\n        m01 = 0,\n        m02 = 0,\n        m03 = 0,\n        m10 = 0,\n        m11 = 1,\n        m12 = 0,\n        m13 = 0,\n        m20 = 0,\n        m21 = 0,\n        m22 = 1,\n        m23 = 0,\n        m30 = 0,\n        m31 = 0,\n        m32 = 0,\n        m33 = 1\n    ) {\n        super(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    get x() {\n        return this[12];\n    }\n\n    get y() {\n        return this[13];\n    }\n\n    get z() {\n        return this[14];\n    }\n\n    get w() {\n        return this[15];\n    }\n\n    set x(v) {\n        this[12] = v;\n    }\n\n    set y(v) {\n        this[13] = v;\n    }\n\n    set z(v) {\n        this[14] = v;\n    }\n\n    set w(v) {\n        this[15] = v;\n    }\n\n    set(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n        if (m00.length) return this.copy(m00);\n        Mat4Func.set(this, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33);\n        return this;\n    }\n\n    translate(v, m = this) {\n        Mat4Func.translate(this, m, v);\n        return this;\n    }\n\n    rotate(v, axis, m = this) {\n        Mat4Func.rotate(this, m, v, axis);\n        return this;\n    }\n\n    scale(v, m = this) {\n        Mat4Func.scale(this, m, typeof v === 'number' ? [v, v, v] : v);\n        return this;\n    }\n\n    multiply(ma, mb) {\n        if (mb) {\n            Mat4Func.multiply(this, ma, mb);\n        } else {\n            Mat4Func.multiply(this, this, ma);\n        }\n        return this;\n    }\n\n    identity() {\n        Mat4Func.identity(this);\n        return this;\n    }\n\n    copy(m) {\n        Mat4Func.copy(this, m);\n        return this;\n    }\n\n    fromPerspective({ fov, aspect, near, far } = {}) {\n        Mat4Func.perspective(this, fov, aspect, near, far);\n        return this;\n    }\n\n    fromOrthogonal({ left, right, bottom, top, near, far }) {\n        Mat4Func.ortho(this, left, right, bottom, top, near, far);\n        return this;\n    }\n\n    fromQuaternion(q) {\n        Mat4Func.fromQuat(this, q);\n        return this;\n    }\n\n    setPosition(v) {\n        this.x = v[0];\n        this.y = v[1];\n        this.z = v[2];\n        return this;\n    }\n\n    inverse(m = this) {\n        Mat4Func.invert(this, m);\n        return this;\n    }\n\n    compose(q, pos, scale) {\n        Mat4Func.fromRotationTranslationScale(this, q, pos, scale);\n        return this;\n    }\n\n    getRotation(q) {\n        Mat4Func.getRotation(q, this);\n        return this;\n    }\n\n    getTranslation(pos) {\n        Mat4Func.getTranslation(pos, this);\n        return this;\n    }\n\n    getScaling(scale) {\n        Mat4Func.getScaling(scale, this);\n        return this;\n    }\n\n    getMaxScaleOnAxis() {\n        return Mat4Func.getMaxScaleOnAxis(this);\n    }\n\n    lookAt(eye, target, up) {\n        Mat4Func.targetTo(this, eye, target, up);\n        return this;\n    }\n\n    determinant() {\n        return Mat4Func.determinant(this);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        this[3] = a[o + 3];\n        this[4] = a[o + 4];\n        this[5] = a[o + 5];\n        this[6] = a[o + 6];\n        this[7] = a[o + 7];\n        this[8] = a[o + 8];\n        this[9] = a[o + 9];\n        this[10] = a[o + 10];\n        this[11] = a[o + 11];\n        this[12] = a[o + 12];\n        this[13] = a[o + 13];\n        this[14] = a[o + 14];\n        this[15] = a[o + 15];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        a[o + 3] = this[3];\n        a[o + 4] = this[4];\n        a[o + 5] = this[5];\n        a[o + 6] = this[6];\n        a[o + 7] = this[7];\n        a[o + 8] = this[8];\n        a[o + 9] = this[9];\n        a[o + 10] = this[10];\n        a[o + 11] = this[11];\n        a[o + 12] = this[12];\n        a[o + 13] = this[13];\n        a[o + 14] = this[14];\n        a[o + 15] = this[15];\n        return a;\n    }\n}\n","// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\nexport function fromRotationMatrix(out, m, order = 'YXZ') {\n    if (order === 'XYZ') {\n        out[1] = Math.asin(Math.min(Math.max(m[8], -1), 1));\n        if (Math.abs(m[8]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[2] = Math.atan2(-m[4], m[0]);\n        } else {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[2] = 0;\n        }\n    } else if (order === 'YXZ') {\n        out[0] = Math.asin(-Math.min(Math.max(m[9], -1), 1));\n        if (Math.abs(m[9]) < 0.99999) {\n            out[1] = Math.atan2(m[8], m[10]);\n            out[2] = Math.atan2(m[1], m[5]);\n        } else {\n            out[1] = Math.atan2(-m[2], m[0]);\n            out[2] = 0;\n        }\n    } else if (order === 'ZXY') {\n        out[0] = Math.asin(Math.min(Math.max(m[6], -1), 1));\n        if (Math.abs(m[6]) < 0.99999) {\n            out[1] = Math.atan2(-m[2], m[10]);\n            out[2] = Math.atan2(-m[4], m[5]);\n        } else {\n            out[1] = 0;\n            out[2] = Math.atan2(m[1], m[0]);\n        }\n    } else if (order === 'ZYX') {\n        out[1] = Math.asin(-Math.min(Math.max(m[2], -1), 1));\n        if (Math.abs(m[2]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[10]);\n            out[2] = Math.atan2(m[1], m[0]);\n        } else {\n            out[0] = 0;\n            out[2] = Math.atan2(-m[4], m[5]);\n        }\n    } else if (order === 'YZX') {\n        out[2] = Math.asin(Math.min(Math.max(m[1], -1), 1));\n        if (Math.abs(m[1]) < 0.99999) {\n            out[0] = Math.atan2(-m[9], m[5]);\n            out[1] = Math.atan2(-m[2], m[0]);\n        } else {\n            out[0] = 0;\n            out[1] = Math.atan2(m[8], m[10]);\n        }\n    } else if (order === 'XZY') {\n        out[2] = Math.asin(-Math.min(Math.max(m[4], -1), 1));\n        if (Math.abs(m[4]) < 0.99999) {\n            out[0] = Math.atan2(m[6], m[5]);\n            out[1] = Math.atan2(m[8], m[0]);\n        } else {\n            out[0] = Math.atan2(-m[9], m[10]);\n            out[1] = 0;\n        }\n    }\n\n    return out;\n}\n","import * as EulerFunc from './functions/EulerFunc.js';\nimport { Mat4 } from './Mat4.js';\n\nconst tmpMat4 = new Mat4();\n\nexport class Euler extends Array {\n    constructor(x = 0, y = x, z = x, order = 'YXZ') {\n        super(x, y, z);\n        this.order = order;\n        this.onChange = () => {};\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n        this.onChange();\n    }\n\n    set y(v) {\n        this[1] = v;\n        this.onChange();\n    }\n\n    set z(v) {\n        this[2] = v;\n        this.onChange();\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        this[0] = x;\n        this[1] = y;\n        this[2] = z;\n        this.onChange();\n        return this;\n    }\n\n    copy(v) {\n        this[0] = v[0];\n        this[1] = v[1];\n        this[2] = v[2];\n        this.onChange();\n        return this;\n    }\n\n    reorder(order) {\n        this.order = order;\n        this.onChange();\n        return this;\n    }\n\n    fromRotationMatrix(m, order = this.order) {\n        EulerFunc.fromRotationMatrix(this, m, order);\n        return this;\n    }\n\n    fromQuaternion(q, order = this.order) {\n        tmpMat4.fromQuaternion(q);\n        return this.fromRotationMatrix(tmpMat4, order);\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n}\n","import { Vec3 } from '../math/Vec3.js';\nimport { Quat } from '../math/Quat.js';\nimport { Mat4 } from '../math/Mat4.js';\nimport { Euler } from '../math/Euler.js';\n\nexport class Transform {\n    constructor() {\n        this.parent = null;\n        this.children = [];\n        this.visible = true;\n\n        this.matrix = new Mat4();\n        this.worldMatrix = new Mat4();\n        this.matrixAutoUpdate = true;\n\n        this.position = new Vec3();\n        this.quaternion = new Quat();\n        this.scale = new Vec3(1);\n        this.rotation = new Euler();\n        this.up = new Vec3(0, 1, 0);\n\n        this.rotation.onChange = () => this.quaternion.fromEuler(this.rotation);\n        this.quaternion.onChange = () => this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    setParent(parent, notifyParent = true) {\n        if (this.parent && parent !== this.parent) this.parent.removeChild(this, false);\n        this.parent = parent;\n        if (notifyParent && parent) parent.addChild(this, false);\n    }\n\n    addChild(child, notifyChild = true) {\n        if (!~this.children.indexOf(child)) this.children.push(child);\n        if (notifyChild) child.setParent(this, false);\n    }\n\n    removeChild(child, notifyChild = true) {\n        if (!!~this.children.indexOf(child)) this.children.splice(this.children.indexOf(child), 1);\n        if (notifyChild) child.setParent(null, false);\n    }\n\n    updateMatrixWorld(force) {\n        if (this.matrixAutoUpdate) this.updateMatrix();\n        if (this.worldMatrixNeedsUpdate || force) {\n            if (this.parent === null) this.worldMatrix.copy(this.matrix);\n            else this.worldMatrix.multiply(this.parent.worldMatrix, this.matrix);\n            this.worldMatrixNeedsUpdate = false;\n            force = true;\n        }\n\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].updateMatrixWorld(force);\n        }\n    }\n\n    updateMatrix() {\n        this.matrix.compose(this.quaternion, this.position, this.scale);\n        this.worldMatrixNeedsUpdate = true;\n    }\n\n    traverse(callback) {\n        // Return true in callback to stop traversing children\n        if (callback(this)) return;\n        for (let i = 0, l = this.children.length; i < l; i++) {\n            this.children[i].traverse(callback);\n        }\n    }\n\n    decompose() {\n        this.matrix.getTranslation(this.position);\n        this.matrix.getRotation(this.quaternion);\n        this.matrix.getScaling(this.scale);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n\n    lookAt(target, invert = false) {\n        if (invert) this.matrix.lookAt(this.position, target, this.up);\n        else this.matrix.lookAt(target, this.position, this.up);\n        this.matrix.getRotation(this.quaternion);\n        this.rotation.fromQuaternion(this.quaternion);\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n        return this;\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture3D {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == gl.TEXTURE_2D ? true : false,\n            anisotropy = 0,\n            level = 0,\n            layers = 1,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.layers = layers;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(\n                this.target,\n                this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT,\n                this.anisotropy\n            );\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage3D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        this.level,\n                        this.internalFormat,\n                        this.format,\n                        this.type,\n                        this.image[i]\n                    );\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                this.gl.texImage3D(this.target, this.level, this.internalFormat, this.width, this.height, this.layers, 0, this.format, this.type, this.image);\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage3D(\n                        this.target,\n                        level,\n                        this.internalFormat,\n                        this.image[level].width,\n                        this.image[level].height,\n                        0,\n                        this.image[level].data\n                    );\n                }\n            } else {\n                // Regular texture\n                this.gl.texImage3D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage3D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        0,\n                        this.gl.RGBA,\n                        1,\n                        1,\n                        0,\n                        this.gl.RGBA,\n                        this.gl.UNSIGNED_BYTE,\n                        emptyPixel\n                    );\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                this.gl.texImage3D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage3D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}","// stats.js - http://github.com/mrdoob/stats.js\n(function(f,e){\"object\"===typeof exports&&\"undefined\"!==typeof module?module.exports=e():\"function\"===typeof define&&define.amd?define(e):f.Stats=e()})(this,function(){var f=function(){function e(a){c.appendChild(a.dom);return a}function u(a){for(var d=0;d<c.children.length;d++)c.children[d].style.display=d===a?\"block\":\"none\";l=a}var l=0,c=document.createElement(\"div\");c.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\";c.addEventListener(\"click\",function(a){a.preventDefault();\nu(++l%c.children.length)},!1);var k=(performance||Date).now(),g=k,a=0,r=e(new f.Panel(\"FPS\",\"#0ff\",\"#002\")),h=e(new f.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var t=e(new f.Panel(\"MB\",\"#f08\",\"#201\"));u(0);return{REVISION:16,dom:c,addPanel:e,showPanel:u,begin:function(){k=(performance||Date).now()},end:function(){a++;var c=(performance||Date).now();h.update(c-k,200);if(c>g+1E3&&(r.update(1E3*a/(c-g),100),g=c,a=0,t)){var d=performance.memory;t.update(d.usedJSHeapSize/\n1048576,d.jsHeapSizeLimit/1048576)}return c},update:function(){k=this.end()},domElement:c,setMode:u}};f.Panel=function(e,f,l){var c=Infinity,k=0,g=Math.round,a=g(window.devicePixelRatio||1),r=80*a,h=48*a,t=3*a,v=2*a,d=3*a,m=15*a,n=74*a,p=30*a,q=document.createElement(\"canvas\");q.width=r;q.height=h;q.style.cssText=\"width:80px;height:48px\";var b=q.getContext(\"2d\");b.font=\"bold \"+9*a+\"px Helvetica,Arial,sans-serif\";b.textBaseline=\"top\";b.fillStyle=l;b.fillRect(0,0,r,h);b.fillStyle=f;b.fillText(e,t,v);\nb.fillRect(d,m,n,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d,m,n,p);return{dom:q,update:function(h,w){c=Math.min(c,h);k=Math.max(k,h);b.fillStyle=l;b.globalAlpha=1;b.fillRect(0,0,r,m);b.fillStyle=f;b.fillText(g(h)+\" \"+e+\" (\"+g(c)+\"-\"+g(k)+\")\",t,v);b.drawImage(q,d+a,m,n-a,p,d,m,n-a,p);b.fillRect(d+n-a,m,a,p);b.fillStyle=l;b.globalAlpha=.9;b.fillRect(d+n-a,m,a,g((1-h/w)*p))}}};return f});\n","/* eslint-disable immutable/no-mutation */\n\n\nimport { Renderer,Transform,Program,Vec2,Geometry,Mesh} from 'ogl'\n\nimport {Texture3D } from '../texture3D';\n\nexport const renderer = new Renderer({ dpr: 0.75})\nexport const scene = new Transform()\n\nimport vertex from \"../shaders/main.vert\"\nimport fragment from \"../shaders/main.frag\"\nimport Stats from \"stats.js\"\nconst gl = renderer.gl\ndocument.body.appendChild(gl.canvas)\ngl.clearColor(1, 1, 1, 1);\n\nconst zoom = { value: 0.5 }\nconst pan = { value: new Vec2(0,0)}\nconst uTime = { value: 0.0 }\n\nfunction resize() {\n    renderer.setSize(window.innerWidth, window.innerHeight)\n}\n\nresize()\nwindow.addEventListener('resize', resize, false)\n\nvar stats = new Stats();\nstats.showPanel(0); \ndocument.body.appendChild( stats.dom );\n\n\nconst images = [ \n    \n    {\n\n        wa:11,\n        data:new Uint8Array([\n        0,0,1,1,1,1,0,0,0,1,1,\n        0,1,0,0,0,0,1,0,0,1,1,\n        1,0,0,0,0,0,0,1,0,1,1,\n        1,0,2,0,0,2,0,1,0,1,1,\n        1,0,0,0,0,0,0,1,0,1,1,\n        1,0,3,3,3,3,0,1,0,1,1,\n        0,1,0,0,0,0,1,0,0,1,1,\n        0,0,1,1,1,1,0,0,0,1,1,\n        0,0,1,1,1,1,0,0,1,1,0,\n        0,0,1,1,1,1,0,0,0,1,1,\n        0,1,0,0,0,0,1,0,0,1,1,\n        1,0,0,0,0,0,0,1,0,1,1,\n        1,0,2,0,0,2,0,1,0,1,1,\n        1,0,0,0,0,0,0,1,0,1,1,\n        1,0,3,3,3,3,0,1,0,1,1,\n        0,1,0,0,0,0,1,0,0,1,1,\n        0,0,1,1,1,1,0,0,0,1,1,\n        0,0,1,1,1,1,0,0,1,1,0\n    ])\n    \n    },\n    {\n    \n    wa:8,\n    data:new Uint8Array([\n    5,5,5,5,5,5,5,5,\n    5,5,5,5,5,5,5,5,\n    5,5,5,5,5,5,5,5,\n    5,5,5,5,5,5,5,5,\n    5,5,5,5,5,5,5,5,\n    5,5,5,5,5,5,5,5,\n    5,5,5,5,5,5,5,5\n])\n\n}]\n\n\nfor (let i = 0; i < 10000; i++) {\n    images.push({\n        wa:32,\n        data:new Uint8Array(32 * 32).fill(0).map(() =>Math.floor(Math.random() *7 ))\n    })\n}\n\n\nconst width =   1024 ;\nconst height = width;\n\nconst cols = Math.floor(width / 32);\nconst layers = Math.ceil(images.length / (cols*cols) );\n\nconst c = new Uint8Array((width*height) * layers );\n   let indx = 0;\n    for(const image of images){\n       for (let y = 0; y < 32 ; y++) {\n            for (let x = 0; x < image.wa ; x++) { \n                        c[x+(y+(Math.floor(indx/cols ) *32))*width+((indx%cols)*32 ) ] = image.data[x+y*image.wa];                    \n            }\n        }\n        indx++;    \n    }\n\n  \nconst tex3D = new Texture3D(gl,{target:gl.TEXTURE_2D_ARRAY,image:c,generateMipmaps:false,format:gl.ALPHA,type:gl.UNSIGNED_BYTE,width:width,layers,magFilter:gl.NEAREST,minFilter:gl.NEAREST})\nconst params = (new URL(document.location)).searchParams;\nconst numparticles = Number(params.get(\"particles\")) || 100000;\nconsole.log(\"yoyo\")\nconst numQuads =numparticles;\nconst program = new Program(gl, {\n    vertex,\n    fragment, \n    depthTest:true,\n    transparent:true,\n    cullFace:false,\n    uniforms: {\n        uTime,   \n        zoom,\n        pan,\n        width:{value   :width},\n        height:{value  :height},\n     \n        u_image: { value: tex3D },\n        numQuads:{value:numQuads}\n    }\n})\n\nif(!gl.getProgramParameter(program.program, gl.LINK_STATUS)){\n    throw new Error(\"shader compile error ^^^^^\")\n}\nlet data = new Float32Array(numparticles);\n\nfor (let i = 0; i < numparticles; i++) {\n    data[i]=numparticles-i-1;\n}\nconst geometry = new Geometry(gl, {\n    ivid: { data ,instanced:1 },\n});\ngeometry.bindAttributes(program);\n\nrequestAnimationFrame(update)\ngl.depthMask(false);\nfunction update() {\n\n    \n    stats.begin();\n    uTime.value += 0.01;\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n\n    program.use();\n    \n    gl.drawArraysInstanced(gl.TRIANGLES, 0, 6, numQuads)\n    stats.end();\n\n    requestAnimationFrame(update);\n}\n","#version 300 es\nprecision highp float;\nprecision highp sampler2DArray;\nuniform float uTime;\nuniform int numQuads;\nuniform highp int width;\nuniform highp int height;\nin float ivid;\nflat out int vid;\nflat out float rotation;\nout vec2 vemu_PointCoord;\n\nfloat hash(float p) {\n  vec2 p2 = fract(vec2(p * 5.3983, p * 5.4427));\n  p2 += dot(p2.yx, p2.xy + vec2(21.5351, 14.3137));\n  return fract(p2.x * p2.y * 95.4337);\n}\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nvec2 rotateUV(vec2 uv, float rotation, vec2 mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n      cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n    );\n}\n\nvoid main() {\n\n  int qID = numQuads-gl_InstanceID;\n  float u = float(qID) / float(numQuads);\n  vid = int(ivid);\n  float size =  25. +(sin(uTime  ) * 10.0);\n  float off = floor(uTime + u) / 1000.0;            // changes once per second per vertex\n\n  float x = hash(u + off) * 2.0 - 1.0;             // random position\n  float y = fract(uTime + u) * -2.0 + 1.0;      // 1.0 ->  -1.0\n  rotation = uTime;\n  ivec2 unitQuad = ivec2(\n      gl_VertexID / 6 + gl_VertexID % 2,\n      (gl_VertexID / 2 + gl_VertexID / 3) % 2);\n\n  gl_Position = vec4(   vec2(x,y)  , u,  1.);\n  gl_Position.xy += (vec2(unitQuad) - 0.5) * 2.0 * size / vec2(width,height);\n  vec2 rot = rotateUV(gl_Position.xy, rotation,vec2(x,y));\n  gl_Position.xy = rot;\n  vemu_PointCoord = vec2(unitQuad.x, 1.0 - float(unitQuad.y));\n  \n\n}","#version 300 es\nprecision highp float;\n precision highp sampler2DArray;\n#define PI 3.1415926538\n\nuniform float uTime;\nuniform sampler2DArray u_image;\nuniform sampler2D u_imagetest;\nuniform highp int width;\nuniform highp int height;\n\nflat in int vid;\nflat in float rotation;\nout vec4 color;\n\nin vec2 vemu_PointCoord;\n\n#pragma glslify: palette = require('./palette.glsl')\n\n\n\nvoid drawTiles(){\n    vec2    uv = vemu_PointCoord.xy; \n    color = vec4(0.5);\n    if(uv.x < 0. || uv.x > 0. + 1.|| uv.y < 0. || uv.y > 0. + 1.) {\n     //    discard;\n       color = vec4(0.0,0.0,0.0,0.0);\n       return;\n    }\n\n\n    vec2 spriteSize = vec2(32.,32.);\n    \n    float spnum = float(vid );\n  \n    float dx = spriteSize.x / float(width);\n    float dy = spriteSize.y / float(height);\n    \n    float cols = float(width) / spriteSize.x;\n    \n    float index = mod(spnum  , cols*cols);\n    // From linear index to row/col pair\n    float col = mod(index, cols);\n    float row = floor(index / cols);\n    uv = vec2(dx * uv.x + (col/cols) ,   dy * uv.y + (row/cols) );\n    int currentLayer = int(floor(spnum / (cols*cols)));\n    vec3 currentPos = vec3(uv, float(currentLayer));\n    int indx = int(texture(u_image, currentPos).a * 255.0) ;\n    if(indx == 0 ){\n          color = vec4(0.0,0.0,0.0,0.0);\n       return;\n    }\n    color=  vec4(palette[indx],1.0);\n    \n    }\n\n\nvoid main() {\n   // if(gl_FragCoord.z > 1.0) discard;\n   // color = vec4(vec3(gl_FragCoord.z*1.), 1.0);\n\n    drawTiles();\n}\n\n"],"names":["self","ReferenceError","instance","Constructor","TypeError","$e5f9bd0c37e9914c$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","$ac93fd2313270fd8$var$setPrototypeOf","o1","p1","setPrototypeOf","o","p","__proto__","subClass","superClass","create","constructor","value","$ac93fd2313270fd8$export$2e2bcd8739ae039","call","obj","Symbol","$08b63c45f54847ee$export$2e2bcd8739ae039","$fb222e0933d810ce$var$isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","$fb222e0933d810ce$var$construct","Parent1","args1","Class1","Parent","args","Class","a","push","apply","Function","bind","_setPrototypeOf","arguments","$7dc24fd3d8e84af6$var$getPrototypeOf","getPrototypeOf","$24ab38bdd93e1228$var$wrapNativeSuper","_cache","Map","undefined","fn","indexOf","has","get","set","Wrapper","$fb222e0933d810ce$export$2e2bcd8739ae039","$7dc24fd3d8e84af6$export$2e2bcd8739ae039","this","Derived","hasNativeReflectConstruct","Boolean","valueOf","$d60c94504fa4a111$export$2e2bcd8739ae039","result","Super","NewTarget","$87fe16ba8ff029a3$export$2e2bcd8739ae039","$3916ee873ae37b05$export$f24224f1c91d8156","x","y","z","Math","sqrt","$3916ee873ae37b05$export$784d13d8ee351f07","out","$3916ee873ae37b05$export$adaa4cf7ef1b65be","$3916ee873ae37b05$export$e16d8520af44a096","b","$3916ee873ae37b05$export$4e2d2ead65e5f7e3","$3916ee873ae37b05$export$dcdf75081b88279d","$3916ee873ae37b05$export$ab44e1323ffc8376","$3916ee873ae37b05$export$aef51622e549b8b0","$3916ee873ae37b05$export$70ae2c07e401031b","$3916ee873ae37b05$export$a3295358bff77e","len","$3916ee873ae37b05$export$94132a0e348806d4","$3916ee873ae37b05$export$bb646b20bb93d339","ax","ay","az","bx","by","bz","tempA","tempB","$3916ee873ae37b05$export$944b09d2ad10b378","cosine","PI","acos","$1feb02469bae8422$export$838423f3adec30fa","Array","_this","v","copy","va","vb","$3916ee873ae37b05$export$9f17032d917177de","$3916ee873ae37b05$export$88e6ebb4fe54f538","mat4","m","w","$3916ee873ae37b05$export$5ffbd13800309d59","$3916ee873ae37b05$export$58ce737ad0c12bc2","q","qx","qy","qz","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","$3916ee873ae37b05$export$c32adef9e939ce85","t","$3916ee873ae37b05$export$3a89f8d6f6bf6c9f","normalize","$886e501c6b58f9f2$var$tempVec3","$886e501c6b58f9f2$var$ID","$886e501c6b58f9f2$var$ATTR_ID","$886e501c6b58f9f2$var$isBoundsWarned","$886e501c6b58f9f2$export$2db6c17465f94a2","gl","attributes","canvas","console","error","id","VAOs","drawRange","start","count","instancedCount","renderer","bindVertexArray","currentGeometry","glState","state","addAttribute","attr","size","type","data","Float32Array","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","offset","byteLength","divisor","instanced","needsUpdate","buffer","createBuffer","updateAttribute","isInstanced","warn","min","index","max","boundBuffer","bindBuffer","bufferData","STATIC_DRAW","program","attributeOrder","createVertexArray","bindAttributes","attributeLocations","forEach","location","param","name","numLoc","vertexAttribPointer","enableVertexAttribArray","vertexAttribDivisor","concat","param1","_mode","mode","TRIANGLES","createVAO","drawElementsInstanced","drawArraysInstanced","drawElements","drawArrays","position","getPosition","array","bounds","center","scale","radius","Infinity","l","sub","add","divide","computeBoundingBox","maxRadiusSq","fromArray","squaredDistance","deleteVertexArray","key1","deleteBuffer","$9acdf72ee265eda5$var$ID","$9acdf72ee265eda5$var$arrayCacheF32","$9acdf72ee265eda5$export$b6c59b989905b650","ref","vertex","fragment","_uniforms","uniforms","_transparent","transparent","_cullFace","cullFace","BACK","_frontFace","frontFace","CCW","_depthTest","depthTest","_depthWrite","depthWrite","_depthFunc","depthFunc","LESS","blendFunc","blendEquation","src","premultipliedAlpha","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","$9acdf72ee265eda5$var$addLineNumbers","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","uniformLocations","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","getAttribLocation","join","dst","srcAlpha","dstAlpha","modeRGB","modeAlpha","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","setBlendEquation","_flipFaces","flipFaces","textureUnit","programActive","currentProgram","useProgram","activeUniform","$9acdf72ee265eda5$var$warn","texture","update","$9acdf72ee265eda5$var$setUniform","textureUnits","applyState","CW","deleteProgram","arrayLen","valueLen","$9acdf72ee265eda5$var$flatten","setValue","slice","$9acdf72ee265eda5$var$arraysEqual","$9acdf72ee265eda5$var$setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","$9acdf72ee265eda5$var$warnCount","message","$80f48ebd8043c74c$var$tempVec3","$80f48ebd8043c74c$var$ID","$80f48ebd8043c74c$export$88530751e3977073","_canvas","document","createElement","_width","width","_height","height","_dpr","dpr","_alpha","alpha","_depth","depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_autoClear","autoClear","_webgl","webgl","color","getContext","isWebgl2","setSize","ZERO","FUNC_ADD","depthMask","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","activeTextureUnit","extensions","getExtension","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","assign","style","scissor","blendFuncSeparate","blendEquationSeparate","activeTexture","TEXTURE0","_target","FRAMEBUFFER","_buffer","bindFramebuffer","extension","webgl2Func","extFunc","renderOrder","zDepth","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","node","visible","draw","frustumCulled","frustumIntersectsMesh","opaque","ui","worldMatrix","getTranslation","applyMatrix4","projectionViewMatrix","sortOpaque","sortTransparent","sortUI","_update","_sort","_frustumCull","clear","setViewport","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","getRenderList","$05ac4bb7b867d9a7$export$2060d2db72cce88f","aw","bw","$05ac4bb7b867d9a7$export$6897c284b6f9f4dc","a0","a1","a2","a3","$05ac4bb7b867d9a7$export$94132a0e348806d4","invDot","$05ac4bb7b867d9a7$export$7679f47e72c62560","$05ac4bb7b867d9a7$export$784d13d8ee351f07","$05ac4bb7b867d9a7$export$adaa4cf7ef1b65be","$05ac4bb7b867d9a7$export$a3295358bff77e","$1701d862f1484e14$export$5edfe12bb88684c8","onChange","rad","sin","cos","$05ac4bb7b867d9a7$export$a59c8716592e09af","$05ac4bb7b867d9a7$export$cf71e4d4ca4d1cfd","$05ac4bb7b867d9a7$export$ea6eae3365de5b9c","qA","qB","matrix3","fRoot","fTrace","j","k","$05ac4bb7b867d9a7$export$272a1eb8e5a4b55b","euler","order","sx","cx","sy","cy","sz","cz","$05ac4bb7b867d9a7$export$7a404a587ea85af","axis","s","$05ac4bb7b867d9a7$export$4286ddefc8f49512","omega","cosom","sinom","scale0","scale1","$05ac4bb7b867d9a7$export$1544d9bc2995de08","$28deef93674b0f13$export$6897c284b6f9f4dc","a00","a01","a02","a03","a10","a11","a12","a13","a20","a21","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","det","$28deef93674b0f13$export$2060d2db72cce88f","b0","b1","b2","b3","$28deef93674b0f13$export$d73ee8ef04f5226a","$28deef93674b0f13$export$dcdf75081b88279d","$28deef93674b0f13$export$bb628a54ab399bc9","c","b12","b20","b21","b22","hypot","abs","$28deef93674b0f13$export$71dc54d92bd04b57","mat","m11","m12","m13","m21","m22","m23","m31","m32","m33","temp","$28deef93674b0f13$export$df3937d3b537df0a","scaling","is1","is2","is3","sm11","sm12","sm13","sm21","sm22","sm23","sm31","sm32","sm33","trace","S","$28deef93674b0f13$export$541149539f3a4684","fovy","aspect","near","far","f","tan","nf","$421348eb3bbac12b$export$21c0e3d5e995d7e1","m00","m01","m02","m03","m10","m20","m30","$28deef93674b0f13$export$adaa4cf7ef1b65be","ma","mb","fov","left","right","bottom","top","lr","bt","$28deef93674b0f13$export$4f2167e613cfc87b","x2","y2","z2","xx","yx","yy","zx","zy","zz","wx","wy","wz","$28deef93674b0f13$export$2ff2bbe382249af7","pos","xy","xz","yz","$28deef93674b0f13$export$ddf9c55c9f2be172","$28deef93674b0f13$export$6276f53cd18ff805","eye","up","eyex","eyey","eyez","upx","upy","upz","z0","z1","x0","x1","$28deef93674b0f13$export$aa67782f4dc9e52c","$988f0ec4926b8e6e$export$48889b85f55f068c","asin","atan2","$1f83e877462d6ddb$var$tmpMat4","$1f83e877462d6ddb$export$d93cc409a0768c5f","fromQuaternion","fromRotationMatrix","$8b05f83bd08ccb65$export$563a914cafbdc389","parent","children","matrix","matrixAutoUpdate","quaternion","rotation","fromEuler","notifyParent","removeChild","addChild","child","notifyChild","setParent","splice","force","updateMatrix","worldMatrixNeedsUpdate","multiply","compose","callback","getRotation","getScaling","invert","lookAt","$a60f791a272ba282$export$adaa4cf7ef1b65be","$a60f791a272ba282$export$e16d8520af44a096","$a60f791a272ba282$export$4e2d2ead65e5f7e3","$a60f791a272ba282$export$dcdf75081b88279d","$a60f791a272ba282$export$f24224f1c91d8156","$a60f791a272ba282$export$aef51622e549b8b0","$a60f791a272ba282$export$70ae2c07e401031b","$a60f791a272ba282$export$bb646b20bb93d339","$3923eab166ce644e$export$ac4bca90992eed1","$a60f791a272ba282$export$9f17032d917177de","$a60f791a272ba282$export$88e6ebb4fe54f538","$a60f791a272ba282$export$ab44e1323ffc8376","$a60f791a272ba282$export$a3295358bff77e","mat3","$a60f791a272ba282$export$f0bfa0a0024626ee","$a60f791a272ba282$export$5ffbd13800309d59","$a60f791a272ba282$export$3a89f8d6f6bf6c9f","$e85604418d6a95c9$var$emptyPixel","Uint8Array","$e85604418d6a95c9$var$isPowerOf2","$e85604418d6a95c9$var$ID","$e85604418d6a95c9$export$b7ba14ec3f632e98","image","TEXTURE_2D","_type","UNSIGNED_BYTE","_format","format","RGBA","_internalFormat","internalFormat","_wrapS","wrapS","CLAMP_TO_EDGE","_wrapT","wrapT","_generateMipmaps","generateMipmaps","_minFilter","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","_magFilter","magFilter","_premultiplyAlpha","_unpackAlignment","_flipY","_anisotropy","anisotropy","_level","level","_layers","layers","createTexture","store","REPEAT","bindTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage3D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage3D","generateMipmap","onUpdate","i1","$a759912a70d9e191$exports","f1","c1","appendChild","dom","u","d","display","cssText","addEventListener","preventDefault","performance","now","g","r","Panel","h","memory","REVISION","addPanel","showPanel","begin","end","usedJSHeapSize","jsHeapSizeLimit","domElement","setMode","round","window","devicePixelRatio","h1","n","font","textBaseline","fillStyle","fillRect","fillText","globalAlpha","drawImage","define","amd","Stats","$0b5eaffe76340055$export$e30378e28ad3e6ab","$0b5eaffe76340055$var$gl","body","clearColor","$0b5eaffe76340055$var$pan","$0b5eaffe76340055$var$uTime","$0b5eaffe76340055$var$resize","innerWidth","innerHeight","$0b5eaffe76340055$var$stats","$parcel$interopDefault","$0b5eaffe76340055$var$images","wa","fill","map","floor","random","$0b5eaffe76340055$var$width","$0b5eaffe76340055$var$cols","$0b5eaffe76340055$var$layers","ceil","$0b5eaffe76340055$var$c","$0b5eaffe76340055$var$indx","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","err","return","$0b5eaffe76340055$var$tex3D","TEXTURE_2D_ARRAY","ALPHA","NEAREST","$0b5eaffe76340055$var$params","URL","searchParams","$0b5eaffe76340055$var$numparticles","log","$0b5eaffe76340055$var$numQuads","$0b5eaffe76340055$var$program","uTime","zoom","pan","u_image","numQuads","Error","$0b5eaffe76340055$var$data","ivid","requestAnimationFrame","$0b5eaffe76340055$var$update","use"],"version":3,"file":"index.3d0f189a.js.map"}