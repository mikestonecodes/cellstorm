{"mappings":"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","sources":["node_modules/@swc/helpers/src/_assert_this_initialized.js","node_modules/@swc/helpers/src/_class_call_check.js","node_modules/@swc/helpers/src/_create_class.js","node_modules/@swc/helpers/src/_set_prototype_of.js","node_modules/@swc/helpers/src/_inherits.js","node_modules/@swc/helpers/src/_possible_constructor_return.js","node_modules/@swc/helpers/src/_type_of.js","node_modules/@swc/helpers/src/_construct.js","node_modules/@swc/helpers/src/_get_prototype_of.js","node_modules/@swc/helpers/src/_wrap_native_super.js","node_modules/@swc/helpers/src/_is_native_function.js","node_modules/@swc/helpers/src/_create_super.js","node_modules/@swc/helpers/src/_is_native_reflect_construct.js","node_modules/ogl/src/math/functions/Vec3Func.js","node_modules/ogl/src/math/Vec3.js","node_modules/ogl/src/core/Geometry.js","node_modules/ogl/src/core/Program.js","node_modules/ogl/src/core/Renderer.js","node_modules/ogl/src/math/functions/Vec2Func.js","node_modules/ogl/src/math/Vec2.js","src/texture3D.js","src/shaders/main.vert","src/world/index.mjs","src/shaders/main.frag"],"sourcesContent":["export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n","function setPrototypeOf(o, p) {\n  setPrototypeOf = Object.setPrototypeOf || function setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return setPrototypeOf(o, p);\n}\n\nexport default function _setPrototypeOf(o, p) {\n  return setPrototypeOf(o, p);\n}\n","import setPrototypeOf from './_set_prototype_of';\n\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n","import assertThisInitialized from './_assert_this_initialized';\nimport _typeof from './_type_of';\n\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n","export default function _typeof(obj) {\n    return obj && obj.constructor === Symbol ? \"symbol\" : typeof obj;\n};\n","function isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () { }));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    construct = Reflect.construct;\n  } else {\n    construct = function construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) _setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n\n  return construct.apply(null, arguments);\n}\n\nexport default function _construct(Parent, args, Class) {\n  return construct.apply(null, arguments);\n}","function getPrototypeOf(o) {\n  getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return getPrototypeOf(o);\n}\n\nexport default function _getPrototypeOf(o) {\n  return getPrototypeOf(o);\n}","import construct from './_construct';\nimport isNativeFunction from './_is_native_function';\nimport getPrototypeOf from './_get_prototype_of';\nimport setPrototypeOf from './_set_prototype_of';\n\nfunction wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n\n  wrapNativeSuper = function wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n\n      _cache.set(Class, Wrapper);\n    }\n\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n\n  return wrapNativeSuper(Class);\n}\n\nexport default function _wrapNativeSuper(Class) {\n  return wrapNativeSuper(Class);\n}\n","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}\n","import _isNativeReflectConstruct from \"./_is_native_reflect_construct\";\nimport _getPrototypeOf from \"./_get_prototype_of\";\nimport _possibleConstructorReturn from './_possible_constructor_return';\n\nexport default function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n        var Super = _getPrototypeOf(Derived),\n            result;\n        if (hasNativeReflectConstruct) {\n            var NewTarget = _getPrototypeOf(this).constructor;\n            result = Reflect.construct(Super, arguments, NewTarget);\n        } else {\n            result = Super.apply(this, arguments);\n        }\n        return _possibleConstructorReturn(this, result);\n    };\n}","export default function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n    if (Reflect.construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () { }));\n        return true;\n    } catch (e) {\n        return false;\n    }\n}","const EPSILON = 0.000001;\n\n/**\n * Calculates the length of a vec3\n *\n * @param {vec3} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the source vector\n * @returns {vec3} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    return out;\n}\n\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\nexport function set(out, x, y, z) {\n    out[0] = x;\n    out[1] = y;\n    out[2] = z;\n    return out;\n}\n\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    out[2] = a[2] + b[2];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    out[2] = a[2] - b[2];\n    return out;\n}\n\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    out[2] = a[2] * b[2];\n    return out;\n}\n\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    out[2] = a[2] / b[2];\n    return out;\n}\n\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    out[2] = a[2] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return Math.sqrt(x * x + y * y + z * z);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    let x = b[0] - a[0];\n    let y = b[1] - a[1];\n    let z = b[2] - a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Calculates the squared length of a vec3\n *\n * @param {vec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    return x * x + y * y + z * z;\n}\n\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to negate\n * @returns {vec3} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    out[2] = -a[2];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to invert\n * @returns {vec3} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    out[2] = 1.0 / a[2];\n    return out;\n}\n\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a vector to normalize\n * @returns {vec3} out\n */\nexport function normalize(out, a) {\n    let x = a[0];\n    let y = a[1];\n    let z = a[2];\n    let len = x * x + y * y + z * z;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    out[2] = a[2] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n    let ax = a[0],\n        ay = a[1],\n        az = a[2];\n    let bx = b[0],\n        by = b[1],\n        bz = b[2];\n\n    out[0] = ay * bz - az * by;\n    out[1] = az * bx - ax * bz;\n    out[2] = ax * by - ay * bx;\n    return out;\n}\n\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the first operand\n * @param {vec3} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec3} out\n */\nexport function lerp(out, a, b, t) {\n    let ax = a[0];\n    let ay = a[1];\n    let az = a[2];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    out[2] = az + t * (b[2] - az);\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n    return out;\n}\n\n/**\n * Same as above but doesn't apply translation.\n * Useful for rays.\n */\nexport function scaleRotateMat4(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let w = m[3] * x + m[7] * y + m[11] * z + m[15];\n    w = w || 1.0;\n    out[0] = (m[0] * x + m[4] * y + m[8] * z) / w;\n    out[1] = (m[1] * x + m[5] * y + m[9] * z) / w;\n    out[2] = (m[2] * x + m[6] * y + m[10] * z) / w;\n    return out;\n}\n\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {mat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\nexport function transformMat3(out, a, m) {\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    out[0] = x * m[0] + y * m[3] + z * m[6];\n    out[1] = x * m[1] + y * m[4] + z * m[7];\n    out[2] = x * m[2] + y * m[5] + z * m[8];\n    return out;\n}\n\n/**\n * Transforms the vec3 with a quat\n *\n * @param {vec3} out the receiving vector\n * @param {vec3} a the vector to transform\n * @param {quat} q quaternion to transform with\n * @returns {vec3} out\n */\nexport function transformQuat(out, a, q) {\n    // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n\n    let x = a[0],\n        y = a[1],\n        z = a[2];\n    let qx = q[0],\n        qy = q[1],\n        qz = q[2],\n        qw = q[3];\n\n    let uvx = qy * z - qz * y;\n    let uvy = qz * x - qx * z;\n    let uvz = qx * y - qy * x;\n\n    let uuvx = qy * uvz - qz * uvy;\n    let uuvy = qz * uvx - qx * uvz;\n    let uuvz = qx * uvy - qy * uvx;\n\n    let w2 = qw * 2;\n    uvx *= w2;\n    uvy *= w2;\n    uvz *= w2;\n\n    uuvx *= 2;\n    uuvy *= 2;\n    uuvz *= 2;\n\n    out[0] = x + uvx + uuvx;\n    out[1] = y + uvy + uuvy;\n    out[2] = z + uvz + uuvz;\n    return out;\n}\n\n/**\n * Get the angle between two 3D vectors\n * @param {vec3} a The first operand\n * @param {vec3} b The second operand\n * @returns {Number} The angle in radians\n */\nexport const angle = (function () {\n    const tempA = [0, 0, 0];\n    const tempB = [0, 0, 0];\n\n    return function (a, b) {\n        copy(tempA, a);\n        copy(tempB, b);\n\n        normalize(tempA, tempA);\n        normalize(tempB, tempB);\n\n        let cosine = dot(tempA, tempB);\n\n        if (cosine > 1.0) {\n            return 0;\n        } else if (cosine < -1.0) {\n            return Math.PI;\n        } else {\n            return Math.acos(cosine);\n        }\n    };\n})();\n\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {vec3} a The first vector.\n * @param {vec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n","import * as Vec3Func from './functions/Vec3Func.js';\n\nexport class Vec3 extends Array {\n    constructor(x = 0, y = x, z = x) {\n        super(x, y, z);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    get z() {\n        return this[2];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set z(v) {\n        this[2] = v;\n    }\n\n    set(x, y = x, z = x) {\n        if (x.length) return this.copy(x);\n        Vec3Func.set(this, x, y, z);\n        return this;\n    }\n\n    copy(v) {\n        Vec3Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec3Func.add(this, va, vb);\n        else Vec3Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec3Func.subtract(this, va, vb);\n        else Vec3Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec3Func.multiply(this, this, v);\n        else Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec3Func.divide(this, this, v);\n        else Vec3Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec3Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec3Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec3Func.distance(this, v);\n        else return Vec3Func.length(this);\n    }\n\n    squaredLen() {\n        return Vec3Func.squaredLength(this);\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec3Func.squaredDistance(this, v);\n        else return Vec3Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec3Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) Vec3Func.cross(this, va, vb);\n        else Vec3Func.cross(this, this, va);\n        return this;\n    }\n\n    scale(v) {\n        Vec3Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec3Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec3Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec3Func.exactEquals(this, v);\n    }\n\n    applyMatrix4(mat4) {\n        Vec3Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    scaleRotateMatrix4(mat4) {\n        Vec3Func.scaleRotateMat4(this, this, mat4);\n        return this;\n    }\n\n    applyQuaternion(q) {\n        Vec3Func.transformQuat(this, this, q);\n        return this;\n    }\n\n    angle(v) {\n        return Vec3Func.angle(this, v);\n    }\n\n    lerp(v, t) {\n        Vec3Func.lerp(this, this, v, t);\n        return this;\n    }\n\n    clone() {\n        return new Vec3(this[0], this[1], this[2]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        this[2] = a[o + 2];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        a[o + 2] = this[2];\n        return a;\n    }\n\n    transformDirection(mat4) {\n        const x = this[0];\n        const y = this[1];\n        const z = this[2];\n\n        this[0] = mat4[0] * x + mat4[4] * y + mat4[8] * z;\n        this[1] = mat4[1] * x + mat4[5] * y + mat4[9] * z;\n        this[2] = mat4[2] * x + mat4[6] * y + mat4[10] * z;\n\n        return this.normalize();\n    }\n}\n","// attribute params\n// {\n//     data - typed array eg UInt16Array for indices, Float32Array\n//     size - int default 1\n//     instanced - default null. Pass divisor amount\n//     type - gl enum default gl.UNSIGNED_SHORT for 'index', gl.FLOAT for others\n//     normalized - boolean default false\n\n//     buffer - gl buffer, if buffer exists, don't need to provide data\n//     stride - default 0 - for when passing in buffer\n//     offset - default 0 - for when passing in buffer\n//     count - default null - for when passing in buffer\n//     min - array - for when passing in buffer\n//     max - array - for when passing in buffer\n// }\n\n// TODO: fit in transform feedback\n// TODO: when would I disableVertexAttribArray ?\n// TODO: use offset/stride if exists\n\nimport { Vec3 } from '../math/Vec3.js';\n\nconst tempVec3 = new Vec3();\n\nlet ID = 1;\nlet ATTR_ID = 1;\n\n// To stop inifinite warnings\nlet isBoundsWarned = false;\n\nexport class Geometry {\n    constructor(gl, attributes = {}) {\n        if (!gl.canvas) console.error('gl not passed as first argument to Geometry');\n        this.gl = gl;\n        this.attributes = attributes;\n        this.id = ID++;\n\n        // Store one VAO per program attribute locations order\n        this.VAOs = {};\n\n        this.drawRange = { start: 0, count: 0 };\n        this.instancedCount = 0;\n\n        // Unbind current VAO so that new buffers don't get added to active mesh\n        this.gl.renderer.bindVertexArray(null);\n        this.gl.renderer.currentGeometry = null;\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // create the buffers\n        for (let key in attributes) {\n            this.addAttribute(key, attributes[key]);\n        }\n    }\n\n    addAttribute(key, attr) {\n        this.attributes[key] = attr;\n\n        // Set options\n        attr.id = ATTR_ID++; // TODO: currently unused, remove?\n        attr.size = attr.size || 1;\n        attr.type =\n            attr.type ||\n            (attr.data.constructor === Float32Array\n                ? this.gl.FLOAT\n                : attr.data.constructor === Uint16Array\n                ? this.gl.UNSIGNED_SHORT\n                : this.gl.UNSIGNED_INT); // Uint32Array\n        attr.target = key === 'index' ? this.gl.ELEMENT_ARRAY_BUFFER : this.gl.ARRAY_BUFFER;\n        attr.normalized = attr.normalized || false;\n        attr.stride = attr.stride || 0;\n        attr.offset = attr.offset || 0;\n        attr.count = attr.count || (attr.stride ? attr.data.byteLength / attr.stride : attr.data.length / attr.size);\n        attr.divisor = attr.instanced || 0;\n        attr.needsUpdate = false;\n\n        if (!attr.buffer) {\n            attr.buffer = this.gl.createBuffer();\n\n            // Push data to buffer\n            this.updateAttribute(attr);\n        }\n\n        // Update geometry counts. If indexed, ignore regular attributes\n        if (attr.divisor) {\n            this.isInstanced = true;\n            if (this.instancedCount && this.instancedCount !== attr.count * attr.divisor) {\n                console.warn('geometry has multiple instanced buffers of different length');\n                return (this.instancedCount = Math.min(this.instancedCount, attr.count * attr.divisor));\n            }\n            this.instancedCount = attr.count * attr.divisor;\n        } else if (key === 'index') {\n            this.drawRange.count = attr.count;\n        } else if (!this.attributes.index) {\n            this.drawRange.count = Math.max(this.drawRange.count, attr.count);\n        }\n    }\n\n    updateAttribute(attr) {\n        if (this.glState.boundBuffer !== attr.buffer) {\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n        }\n        this.gl.bufferData(attr.target, attr.data, this.gl.STATIC_DRAW);\n        attr.needsUpdate = false;\n    }\n\n    setIndex(value) {\n        this.addAttribute('index', value);\n    }\n\n    setDrawRange(start, count) {\n        this.drawRange.start = start;\n        this.drawRange.count = count;\n    }\n\n    setInstancedCount(value) {\n        this.instancedCount = value;\n    }\n\n    createVAO(program) {\n        this.VAOs[program.attributeOrder] = this.gl.renderer.createVertexArray();\n        this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n        this.bindAttributes(program);\n    }\n\n    bindAttributes(program) {\n        // Link all attributes to program using gl.vertexAttribPointer\n        program.attributeLocations.forEach((location, { name, type }) => {\n            // If geometry missing a required shader attribute\n            if (!this.attributes[name]) {\n                console.warn(`active attribute ${name} not being supplied`);\n                return;\n            }\n\n            const attr = this.attributes[name];\n\n            this.gl.bindBuffer(attr.target, attr.buffer);\n            this.glState.boundBuffer = attr.buffer;\n\n            // For matrix attributes, buffer needs to be defined per column\n            let numLoc = 1;\n            if (type === 35674) numLoc = 2; // mat2\n            if (type === 35675) numLoc = 3; // mat3\n            if (type === 35676) numLoc = 4; // mat4\n\n            const size = attr.size / numLoc;\n            const stride = numLoc === 1 ? 0 : numLoc * numLoc * numLoc;\n            const offset = numLoc === 1 ? 0 : numLoc * numLoc;\n\n            for (let i = 0; i < numLoc; i++) {\n                this.gl.vertexAttribPointer(location + i, size, attr.type, attr.normalized, attr.stride + stride, attr.offset + i * offset);\n                this.gl.enableVertexAttribArray(location + i);\n\n                // For instanced attributes, divisor needs to be set.\n                // For firefox, need to set back to 0 if non-instanced drawn after instanced. Else won't render\n                this.gl.renderer.vertexAttribDivisor(location + i, attr.divisor);\n            }\n        });\n\n        // Bind indices if geometry indexed\n        if (this.attributes.index) this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, this.attributes.index.buffer);\n    }\n\n    draw({ program, mode = this.gl.TRIANGLES }) {\n        if (this.gl.renderer.currentGeometry !== `${this.id}_${program.attributeOrder}`) {\n            if (!this.VAOs[program.attributeOrder]) this.createVAO(program);\n            this.gl.renderer.bindVertexArray(this.VAOs[program.attributeOrder]);\n            this.gl.renderer.currentGeometry = `${this.id}_${program.attributeOrder}`;\n        }\n\n        // Check if any attributes need updating\n        program.attributeLocations.forEach((location, { name }) => {\n            const attr = this.attributes[name];\n            if (attr.needsUpdate) this.updateAttribute(attr);\n        });\n\n        if (this.isInstanced) {\n            if (this.attributes.index) {\n                this.gl.renderer.drawElementsInstanced(\n                    mode,\n                    this.drawRange.count,\n                    this.attributes.index.type,\n                    this.attributes.index.offset + this.drawRange.start * 2,\n                    this.instancedCount\n                );\n            } else {\n                this.gl.renderer.drawArraysInstanced(mode, this.drawRange.start, this.drawRange.count, this.instancedCount);\n            }\n        } else {\n            if (this.attributes.index) {\n                this.gl.drawElements(mode, this.drawRange.count, this.attributes.index.type, this.attributes.index.offset + this.drawRange.start * 2);\n            } else {\n                this.gl.drawArrays(mode, this.drawRange.start, this.drawRange.count);\n            }\n        }\n    }\n\n    getPosition() {\n        // Use position buffer, or min/max if available\n        const attr = this.attributes.position;\n        // if (attr.min) return [...attr.min, ...attr.max];\n        if (attr.data) return attr;\n        if (isBoundsWarned) return;\n        console.warn('No position buffer data found to compute bounds');\n        return (isBoundsWarned = true);\n    }\n\n    computeBoundingBox(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const offset = attr.offset || 0;\n        const stride = attr.stride || attr.size;\n\n        if (!this.bounds) {\n            this.bounds = {\n                min: new Vec3(),\n                max: new Vec3(),\n                center: new Vec3(),\n                scale: new Vec3(),\n                radius: Infinity,\n            };\n        }\n\n        const min = this.bounds.min;\n        const max = this.bounds.max;\n        const center = this.bounds.center;\n        const scale = this.bounds.scale;\n\n        min.set(+Infinity);\n        max.set(-Infinity);\n\n        // TODO: check size of position (eg triangle with Vec2)\n        for (let i = offset, l = array.length; i < l; i += stride) {\n            const x = array[i];\n            const y = array[i + 1];\n            const z = array[i + 2];\n\n            min.x = Math.min(x, min.x);\n            min.y = Math.min(y, min.y);\n            min.z = Math.min(z, min.z);\n\n            max.x = Math.max(x, max.x);\n            max.y = Math.max(y, max.y);\n            max.z = Math.max(z, max.z);\n        }\n\n        scale.sub(max, min);\n        center.add(min, max).divide(2);\n    }\n\n    computeBoundingSphere(attr) {\n        if (!attr) attr = this.getPosition();\n        const array = attr.data;\n        const offset = attr.offset || 0;\n        const stride = attr.stride || attr.size;\n\n        if (!this.bounds) this.computeBoundingBox(attr);\n\n        let maxRadiusSq = 0;\n        for (let i = offset, l = array.length; i < l; i += stride) {\n            tempVec3.fromArray(array, i);\n            maxRadiusSq = Math.max(maxRadiusSq, this.bounds.center.squaredDistance(tempVec3));\n        }\n\n        this.bounds.radius = Math.sqrt(maxRadiusSq);\n    }\n\n    remove() {\n        for (let key in this.VAOs) {\n            this.gl.renderer.deleteVertexArray(this.VAOs[key]);\n            delete this.VAOs[key];\n        }\n        for (let key in this.attributes) {\n            this.gl.deleteBuffer(this.attributes[key].buffer);\n            delete this.attributes[key];\n        }\n    }\n}\n","// TODO: upload empty texture if null ? maybe not\n// TODO: upload identity matrix if null ?\n// TODO: sampler Cube\n\nlet ID = 1;\n\n// cache of typed arrays used to flatten uniform arrays\nconst arrayCacheF32 = {};\n\nexport class Program {\n    constructor(\n        gl,\n        {\n            vertex,\n            fragment,\n            uniforms = {},\n\n            transparent = false,\n            cullFace = gl.BACK,\n            frontFace = gl.CCW,\n            depthTest = true,\n            depthWrite = true,\n            depthFunc = gl.LESS,\n        } = {}\n    ) {\n        if (!gl.canvas) console.error('gl not passed as fist argument to Program');\n        this.gl = gl;\n        this.uniforms = uniforms;\n        this.id = ID++;\n\n        if (!vertex) console.warn('vertex shader not supplied');\n        if (!fragment) console.warn('fragment shader not supplied');\n\n        // Store program state\n        this.transparent = transparent;\n        this.cullFace = cullFace;\n        this.frontFace = frontFace;\n        this.depthTest = depthTest;\n        this.depthWrite = depthWrite;\n        this.depthFunc = depthFunc;\n        this.blendFunc = {};\n        this.blendEquation = {};\n\n        // set default blendFunc if transparent flagged\n        if (this.transparent && !this.blendFunc.src) {\n            if (this.gl.renderer.premultipliedAlpha) this.setBlendFunc(this.gl.ONE, this.gl.ONE_MINUS_SRC_ALPHA);\n            else this.setBlendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n        }\n\n        // compile vertex shader and log errors\n        const vertexShader = gl.createShader(gl.VERTEX_SHADER);\n        gl.shaderSource(vertexShader, vertex);\n        gl.compileShader(vertexShader);\n        if (gl.getShaderInfoLog(vertexShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(vertexShader)}\\nVertex Shader\\n${addLineNumbers(vertex)}`);\n        }\n\n        // compile fragment shader and log errors\n        const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n        gl.shaderSource(fragmentShader, fragment);\n        gl.compileShader(fragmentShader);\n        if (gl.getShaderInfoLog(fragmentShader) !== '') {\n            console.warn(`${gl.getShaderInfoLog(fragmentShader)}\\nFragment Shader\\n${addLineNumbers(fragment)}`);\n        }\n\n        // compile program and log errors\n        this.program = gl.createProgram();\n        gl.attachShader(this.program, vertexShader);\n        gl.attachShader(this.program, fragmentShader);\n        gl.linkProgram(this.program);\n        if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n            return console.warn(gl.getProgramInfoLog(this.program));\n        }\n\n        // Remove shader once linked\n        gl.deleteShader(vertexShader);\n        gl.deleteShader(fragmentShader);\n\n        // Get active uniform locations\n        this.uniformLocations = new Map();\n        let numUniforms = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS);\n        for (let uIndex = 0; uIndex < numUniforms; uIndex++) {\n            let uniform = gl.getActiveUniform(this.program, uIndex);\n            this.uniformLocations.set(uniform, gl.getUniformLocation(this.program, uniform.name));\n\n            // split uniforms' names to separate array and struct declarations\n            const split = uniform.name.match(/(\\w+)/g);\n\n            uniform.uniformName = split[0];\n\n            if (split.length === 3) {\n                uniform.isStructArray = true;\n                uniform.structIndex = Number(split[1]);\n                uniform.structProperty = split[2];\n            } else if (split.length === 2 && isNaN(Number(split[1]))) {\n                uniform.isStruct = true;\n                uniform.structProperty = split[1];\n            }\n        }\n\n        // Get active attribute locations\n        this.attributeLocations = new Map();\n        const locations = [];\n        const numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES);\n        for (let aIndex = 0; aIndex < numAttribs; aIndex++) {\n            const attribute = gl.getActiveAttrib(this.program, aIndex);\n            const location = gl.getAttribLocation(this.program, attribute.name);\n            locations[location] = attribute.name;\n            this.attributeLocations.set(attribute, location);\n        }\n        this.attributeOrder = locations.join('');\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        this.blendFunc.src = src;\n        this.blendFunc.dst = dst;\n        this.blendFunc.srcAlpha = srcAlpha;\n        this.blendFunc.dstAlpha = dstAlpha;\n        if (src) this.transparent = true;\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        this.blendEquation.modeRGB = modeRGB;\n        this.blendEquation.modeAlpha = modeAlpha;\n    }\n\n    applyState() {\n        if (this.depthTest) this.gl.renderer.enable(this.gl.DEPTH_TEST);\n        else this.gl.renderer.disable(this.gl.DEPTH_TEST);\n\n        if (this.cullFace) this.gl.renderer.enable(this.gl.CULL_FACE);\n        else this.gl.renderer.disable(this.gl.CULL_FACE);\n\n        if (this.blendFunc.src) this.gl.renderer.enable(this.gl.BLEND);\n        else this.gl.renderer.disable(this.gl.BLEND);\n\n        if (this.cullFace) this.gl.renderer.setCullFace(this.cullFace);\n        this.gl.renderer.setFrontFace(this.frontFace);\n        this.gl.renderer.setDepthMask(this.depthWrite);\n        this.gl.renderer.setDepthFunc(this.depthFunc);\n        if (this.blendFunc.src)\n            this.gl.renderer.setBlendFunc(this.blendFunc.src, this.blendFunc.dst, this.blendFunc.srcAlpha, this.blendFunc.dstAlpha);\n        this.gl.renderer.setBlendEquation(this.blendEquation.modeRGB, this.blendEquation.modeAlpha);\n    }\n\n    use({ flipFaces = false } = {}) {\n        let textureUnit = -1;\n        const programActive = this.gl.renderer.currentProgram === this.id;\n\n        // Avoid gl call if program already in use\n        if (!programActive) {\n            this.gl.useProgram(this.program);\n            this.gl.renderer.currentProgram = this.id;\n        }\n\n        // Set only the active uniforms found in the shader\n        this.uniformLocations.forEach((location, activeUniform) => {\n            let name = activeUniform.uniformName;\n\n            // get supplied uniform\n            let uniform = this.uniforms[name];\n\n            // For structs, get the specific property instead of the entire object\n            if (activeUniform.isStruct) {\n                uniform = uniform[activeUniform.structProperty];\n                name += `.${activeUniform.structProperty}`;\n            }\n            if (activeUniform.isStructArray) {\n                uniform = uniform[activeUniform.structIndex][activeUniform.structProperty];\n                name += `[${activeUniform.structIndex}].${activeUniform.structProperty}`;\n            }\n\n            if (!uniform) {\n                return warn(`Active uniform ${name} has not been supplied`);\n            }\n\n            if (uniform && uniform.value === undefined) {\n                return warn(`${name} uniform is missing a value parameter`);\n            }\n\n            if (uniform.value.texture) {\n                textureUnit = textureUnit + 1;\n\n                // Check if texture needs to be updated\n                uniform.value.update(textureUnit);\n                return setUniform(this.gl, activeUniform.type, location, textureUnit);\n            }\n\n            // For texture arrays, set uniform as an array of texture units instead of just one\n            if (uniform.value.length && uniform.value[0].texture) {\n                const textureUnits = [];\n                uniform.value.forEach((value) => {\n                    textureUnit = textureUnit + 1;\n                    value.update(textureUnit);\n                    textureUnits.push(textureUnit);\n                });\n\n                return setUniform(this.gl, activeUniform.type, location, textureUnits);\n            }\n\n            setUniform(this.gl, activeUniform.type, location, uniform.value);\n        });\n\n        this.applyState();\n        if (flipFaces) this.gl.renderer.setFrontFace(this.frontFace === this.gl.CCW ? this.gl.CW : this.gl.CCW);\n    }\n\n    remove() {\n        this.gl.deleteProgram(this.program);\n    }\n}\n\nfunction setUniform(gl, type, location, value) {\n    value = value.length ? flatten(value) : value;\n    const setValue = gl.renderer.state.uniformLocations.get(location);\n\n    // Avoid redundant uniform commands\n    if (value.length) {\n        if (setValue === undefined || setValue.length !== value.length) {\n            // clone array to store as cache\n            gl.renderer.state.uniformLocations.set(location, value.slice(0));\n        } else {\n            if (arraysEqual(setValue, value)) return;\n\n            // Update cached array values\n            setValue.set ? setValue.set(value) : setArray(setValue, value);\n            gl.renderer.state.uniformLocations.set(location, setValue);\n        }\n    } else {\n        if (setValue === value) return;\n        gl.renderer.state.uniformLocations.set(location, value);\n    }\n\n    switch (type) {\n        case 5126:\n            return value.length ? gl.uniform1fv(location, value) : gl.uniform1f(location, value); // FLOAT\n        case 35664:\n            return gl.uniform2fv(location, value); // FLOAT_VEC2\n        case 35665:\n            return gl.uniform3fv(location, value); // FLOAT_VEC3\n        case 35666:\n            return gl.uniform4fv(location, value); // FLOAT_VEC4\n        case 35670: // BOOL\n        case 5124: // INT\n        case 35678: // SAMPLER_2D\n        case 35680:\n            return value.length ? gl.uniform1iv(location, value) : gl.uniform1i(location, value); // SAMPLER_CUBE\n        case 35671: // BOOL_VEC2\n        case 35667:\n            return gl.uniform2iv(location, value); // INT_VEC2\n        case 35672: // BOOL_VEC3\n        case 35668:\n            return gl.uniform3iv(location, value); // INT_VEC3\n        case 35673: // BOOL_VEC4\n        case 35669:\n            return gl.uniform4iv(location, value); // INT_VEC4\n        case 35674:\n            return gl.uniformMatrix2fv(location, false, value); // FLOAT_MAT2\n        case 35675:\n            return gl.uniformMatrix3fv(location, false, value); // FLOAT_MAT3\n        case 35676:\n            return gl.uniformMatrix4fv(location, false, value); // FLOAT_MAT4\n    }\n}\n\nfunction addLineNumbers(string) {\n    let lines = string.split('\\n');\n    for (let i = 0; i < lines.length; i++) {\n        lines[i] = i + 1 + ': ' + lines[i];\n    }\n    return lines.join('\\n');\n}\n\nfunction flatten(a) {\n    const arrayLen = a.length;\n    const valueLen = a[0].length;\n    if (valueLen === undefined) return a;\n    const length = arrayLen * valueLen;\n    let value = arrayCacheF32[length];\n    if (!value) arrayCacheF32[length] = value = new Float32Array(length);\n    for (let i = 0; i < arrayLen; i++) value.set(a[i], i * valueLen);\n    return value;\n}\n\nfunction arraysEqual(a, b) {\n    if (a.length !== b.length) return false;\n    for (let i = 0, l = a.length; i < l; i++) {\n        if (a[i] !== b[i]) return false;\n    }\n    return true;\n}\n\nfunction setArray(a, b) {\n    for (let i = 0, l = a.length; i < l; i++) {\n        a[i] = b[i];\n    }\n}\n\nlet warnCount = 0;\nfunction warn(message) {\n    if (warnCount > 100) return;\n    console.warn(message);\n    warnCount++;\n    if (warnCount > 100) console.warn('More than 100 program warnings - stopping logs.');\n}\n","import { Vec3 } from '../math/Vec3.js';\n\n// TODO: Handle context loss https://www.khronos.org/webgl/wiki/HandlingContextLost\n\n// Not automatic - devs to use these methods manually\n// gl.colorMask( colorMask, colorMask, colorMask, colorMask );\n// gl.clearColor( r, g, b, a );\n// gl.stencilMask( stencilMask );\n// gl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n// gl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n// gl.clearStencil( stencil );\n\nconst tempVec3 = new Vec3();\nlet ID = 1;\n\nexport class Renderer {\n    constructor({\n        canvas = document.createElement('canvas'),\n        width = 300,\n        height = 150,\n        dpr = 1,\n        alpha = false,\n        depth = true,\n        stencil = false,\n        antialias = false,\n        premultipliedAlpha = false,\n        preserveDrawingBuffer = false,\n        powerPreference = 'default',\n        autoClear = true,\n        webgl = 2,\n    } = {}) {\n        const attributes = { alpha, depth, stencil, antialias, premultipliedAlpha, preserveDrawingBuffer, powerPreference };\n        this.dpr = dpr;\n        this.alpha = alpha;\n        this.color = true;\n        this.depth = depth;\n        this.stencil = stencil;\n        this.premultipliedAlpha = premultipliedAlpha;\n        this.autoClear = autoClear;\n        this.id = ID++;\n\n        // Attempt WebGL2 unless forced to 1, if not supported fallback to WebGL1\n        if (webgl === 2) this.gl = canvas.getContext('webgl2', attributes);\n        this.isWebgl2 = !!this.gl;\n        if (!this.gl) this.gl = canvas.getContext('webgl', attributes);\n        if (!this.gl) console.error('unable to create webgl context');\n\n        // Attach renderer to gl so that all classes have access to internal state functions\n        this.gl.renderer = this;\n\n        // initialise size values\n        this.setSize(width, height);\n\n        // gl state stores to avoid redundant calls on methods used internally\n        this.state = {};\n        this.state.blendFunc = { src: this.gl.ONE, dst: this.gl.ZERO };\n        this.state.blendEquation = { modeRGB: this.gl.FUNC_ADD };\n        this.state.cullFace = null;\n        this.state.frontFace = this.gl.CCW;\n        this.state.depthMask = true;\n        this.state.depthFunc = this.gl.LESS;\n        this.state.premultiplyAlpha = false;\n        this.state.flipY = false;\n        this.state.unpackAlignment = 4;\n        this.state.framebuffer = null;\n        this.state.viewport = { x: 0, y: 0, width: null, height: null };\n        this.state.textureUnits = [];\n        this.state.activeTextureUnit = 0;\n        this.state.boundBuffer = null;\n        this.state.uniformLocations = new Map();\n\n        // store requested extensions\n        this.extensions = {};\n\n        // Initialise extra format types\n        if (this.isWebgl2) {\n            this.getExtension('EXT_color_buffer_float');\n            this.getExtension('OES_texture_float_linear');\n        } else {\n            this.getExtension('OES_texture_float');\n            this.getExtension('OES_texture_float_linear');\n            this.getExtension('OES_texture_half_float');\n            this.getExtension('OES_texture_half_float_linear');\n            this.getExtension('OES_element_index_uint');\n            this.getExtension('OES_standard_derivatives');\n            this.getExtension('EXT_sRGB');\n            this.getExtension('WEBGL_depth_texture');\n            this.getExtension('WEBGL_draw_buffers');\n        }\n\n        // Create method aliases using extension (WebGL1) or native if available (WebGL2)\n        this.vertexAttribDivisor = this.getExtension('ANGLE_instanced_arrays', 'vertexAttribDivisor', 'vertexAttribDivisorANGLE');\n        this.drawArraysInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawArraysInstanced', 'drawArraysInstancedANGLE');\n        this.drawElementsInstanced = this.getExtension('ANGLE_instanced_arrays', 'drawElementsInstanced', 'drawElementsInstancedANGLE');\n        this.createVertexArray = this.getExtension('OES_vertex_array_object', 'createVertexArray', 'createVertexArrayOES');\n        this.bindVertexArray = this.getExtension('OES_vertex_array_object', 'bindVertexArray', 'bindVertexArrayOES');\n        this.deleteVertexArray = this.getExtension('OES_vertex_array_object', 'deleteVertexArray', 'deleteVertexArrayOES');\n        this.drawBuffers = this.getExtension('WEBGL_draw_buffers', 'drawBuffers', 'drawBuffersWEBGL');\n\n        // Store device parameters\n        this.parameters = {};\n        this.parameters.maxTextureUnits = this.gl.getParameter(this.gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n        this.parameters.maxAnisotropy = this.getExtension('EXT_texture_filter_anisotropic')\n            ? this.gl.getParameter(this.getExtension('EXT_texture_filter_anisotropic').MAX_TEXTURE_MAX_ANISOTROPY_EXT)\n            : 0;\n    }\n\n    setSize(width, height) {\n        this.width = width;\n        this.height = height;\n\n        this.gl.canvas.width = width * this.dpr;\n        this.gl.canvas.height = height * this.dpr;\n\n        Object.assign(this.gl.canvas.style, {\n            width: width + 'px',\n            height: height + 'px',\n        });\n    }\n\n    setViewport(width, height, x = 0, y = 0) {\n        if (this.state.viewport.width === width && this.state.viewport.height === height) return;\n        this.state.viewport.width = width;\n        this.state.viewport.height = height;\n        this.state.viewport.x = x;\n        this.state.viewport.y = y;\n        this.gl.viewport(x, y, width, height);\n    }\n\n    setScissor(width, height, x = 0, y = 0) {\n        this.gl.scissor(x, y, width, height);\n    }\n\n    enable(id) {\n        if (this.state[id] === true) return;\n        this.gl.enable(id);\n        this.state[id] = true;\n    }\n\n    disable(id) {\n        if (this.state[id] === false) return;\n        this.gl.disable(id);\n        this.state[id] = false;\n    }\n\n    setBlendFunc(src, dst, srcAlpha, dstAlpha) {\n        if (\n            this.state.blendFunc.src === src &&\n            this.state.blendFunc.dst === dst &&\n            this.state.blendFunc.srcAlpha === srcAlpha &&\n            this.state.blendFunc.dstAlpha === dstAlpha\n        )\n            return;\n        this.state.blendFunc.src = src;\n        this.state.blendFunc.dst = dst;\n        this.state.blendFunc.srcAlpha = srcAlpha;\n        this.state.blendFunc.dstAlpha = dstAlpha;\n        if (srcAlpha !== undefined) this.gl.blendFuncSeparate(src, dst, srcAlpha, dstAlpha);\n        else this.gl.blendFunc(src, dst);\n    }\n\n    setBlendEquation(modeRGB, modeAlpha) {\n        modeRGB = modeRGB || this.gl.FUNC_ADD;\n        if (this.state.blendEquation.modeRGB === modeRGB && this.state.blendEquation.modeAlpha === modeAlpha) return;\n        this.state.blendEquation.modeRGB = modeRGB;\n        this.state.blendEquation.modeAlpha = modeAlpha;\n        if (modeAlpha !== undefined) this.gl.blendEquationSeparate(modeRGB, modeAlpha);\n        else this.gl.blendEquation(modeRGB);\n    }\n\n    setCullFace(value) {\n        if (this.state.cullFace === value) return;\n        this.state.cullFace = value;\n        this.gl.cullFace(value);\n    }\n\n    setFrontFace(value) {\n        if (this.state.frontFace === value) return;\n        this.state.frontFace = value;\n        this.gl.frontFace(value);\n    }\n\n    setDepthMask(value) {\n        if (this.state.depthMask === value) return;\n        this.state.depthMask = value;\n        this.gl.depthMask(value);\n    }\n\n    setDepthFunc(value) {\n        if (this.state.depthFunc === value) return;\n        this.state.depthFunc = value;\n        this.gl.depthFunc(value);\n    }\n\n    activeTexture(value) {\n        if (this.state.activeTextureUnit === value) return;\n        this.state.activeTextureUnit = value;\n        this.gl.activeTexture(this.gl.TEXTURE0 + value);\n    }\n\n    bindFramebuffer({ target = this.gl.FRAMEBUFFER, buffer = null } = {}) {\n        if (this.state.framebuffer === buffer) return;\n        this.state.framebuffer = buffer;\n        this.gl.bindFramebuffer(target, buffer);\n    }\n\n    getExtension(extension, webgl2Func, extFunc) {\n        // if webgl2 function supported, return func bound to gl context\n        if (webgl2Func && this.gl[webgl2Func]) return this.gl[webgl2Func].bind(this.gl);\n\n        // fetch extension once only\n        if (!this.extensions[extension]) {\n            this.extensions[extension] = this.gl.getExtension(extension);\n        }\n\n        // return extension if no function requested\n        if (!webgl2Func) return this.extensions[extension];\n\n        // Return null if extension not supported\n        if (!this.extensions[extension]) return null;\n\n        // return extension function, bound to extension\n        return this.extensions[extension][extFunc].bind(this.extensions[extension]);\n    }\n\n    sortOpaque(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else if (a.zDepth !== b.zDepth) {\n            return a.zDepth - b.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortTransparent(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        }\n        if (a.zDepth !== b.zDepth) {\n            return b.zDepth - a.zDepth;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    sortUI(a, b) {\n        if (a.renderOrder !== b.renderOrder) {\n            return a.renderOrder - b.renderOrder;\n        } else if (a.program.id !== b.program.id) {\n            return a.program.id - b.program.id;\n        } else {\n            return b.id - a.id;\n        }\n    }\n\n    getRenderList({ scene, camera, frustumCull, sort }) {\n        let renderList = [];\n\n        if (camera && frustumCull) camera.updateFrustum();\n\n        // Get visible\n        scene.traverse((node) => {\n            if (!node.visible) return true;\n            if (!node.draw) return;\n\n            if (frustumCull && node.frustumCulled && camera) {\n                if (!camera.frustumIntersectsMesh(node)) return;\n            }\n\n            renderList.push(node);\n        });\n\n        if (sort) {\n            const opaque = [];\n            const transparent = []; // depthTest true\n            const ui = []; // depthTest false\n\n            renderList.forEach((node) => {\n                // Split into the 3 render groups\n                if (!node.program.transparent) {\n                    opaque.push(node);\n                } else if (node.program.depthTest) {\n                    transparent.push(node);\n                } else {\n                    ui.push(node);\n                }\n\n                node.zDepth = 0;\n\n                // Only calculate z-depth if renderOrder unset and depthTest is true\n                if (node.renderOrder !== 0 || !node.program.depthTest || !camera) return;\n\n                // update z-depth\n                node.worldMatrix.getTranslation(tempVec3);\n                tempVec3.applyMatrix4(camera.projectionViewMatrix);\n                node.zDepth = tempVec3.z;\n            });\n\n            opaque.sort(this.sortOpaque);\n            transparent.sort(this.sortTransparent);\n            ui.sort(this.sortUI);\n\n            renderList = opaque.concat(transparent, ui);\n        }\n\n        return renderList;\n    }\n\n    render({ scene, camera, target = null, update = true, sort = true, frustumCull = true, clear }) {\n        if (target === null) {\n            // make sure no render target bound so draws to canvas\n            this.bindFramebuffer();\n            this.setViewport(this.width * this.dpr, this.height * this.dpr);\n        } else {\n            // bind supplied render target and update viewport\n            this.bindFramebuffer(target);\n            this.setViewport(target.width, target.height);\n        }\n\n        if (clear || (this.autoClear && clear !== false)) {\n            // Ensure depth buffer writing is enabled so it can be cleared\n            if (this.depth && (!target || target.depth)) {\n                this.enable(this.gl.DEPTH_TEST);\n                this.setDepthMask(true);\n            }\n            this.gl.clear(\n                (this.color ? this.gl.COLOR_BUFFER_BIT : 0) |\n                    (this.depth ? this.gl.DEPTH_BUFFER_BIT : 0) |\n                    (this.stencil ? this.gl.STENCIL_BUFFER_BIT : 0)\n            );\n        }\n\n        // updates all scene graph matrices\n        if (update) scene.updateMatrixWorld();\n\n        // Update camera separately, in case not in scene graph\n        if (camera) camera.updateMatrixWorld();\n\n        // Get render list - entails culling and sorting\n        const renderList = this.getRenderList({ scene, camera, frustumCull, sort });\n\n        renderList.forEach((node) => {\n            node.draw({ camera });\n        });\n    }\n}\n","const EPSILON = 0.000001;\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n    out[0] = a[0];\n    out[1] = a[1];\n    return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n    out[0] = a[0] + b[0];\n    out[1] = a[1] + b[1];\n    return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n    out[0] = a[0] - b[0];\n    out[1] = a[1] - b[1];\n    return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n    out[0] = a[0] * b[0];\n    out[1] = a[1] * b[1];\n    return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n    out[0] = a[0] / b[0];\n    out[1] = a[1] / b[1];\n    return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n    out[0] = a[0] * b;\n    out[1] = a[1] * b;\n    return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n    var x = b[0] - a[0],\n        y = b[1] - a[1];\n    return x * x + y * y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n    var x = a[0],\n        y = a[1];\n    return Math.sqrt(x * x + y * y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength(a) {\n    var x = a[0],\n        y = a[1];\n    return x * x + y * y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n    out[0] = -a[0];\n    out[1] = -a[1];\n    return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n    out[0] = 1.0 / a[0];\n    out[1] = 1.0 / a[1];\n    return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n    var x = a[0],\n        y = a[1];\n    var len = x * x + y * y;\n    if (len > 0) {\n        //TODO: evaluate use of glm_invsqrt here?\n        len = 1 / Math.sqrt(len);\n    }\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n    return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product returns a scalar\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} cross product of a and b\n */\nexport function cross(a, b) {\n    return a[0] * b[1] - a[1] * b[0];\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n    var ax = a[0],\n        ay = a[1];\n    out[0] = ax + t * (b[0] - ax);\n    out[1] = ay + t * (b[1] - ay);\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y;\n    out[1] = m[1] * x + m[3] * y;\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[2] * y + m[4];\n    out[1] = m[1] * x + m[3] * y + m[5];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n    var x = a[0],\n        y = a[1];\n    out[0] = m[0] * x + m[3] * y + m[6];\n    out[1] = m[1] * x + m[4] * y + m[7];\n    return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n    let x = a[0];\n    let y = a[1];\n    out[0] = m[0] * x + m[4] * y + m[12];\n    out[1] = m[1] * x + m[5] * y + m[13];\n    return out;\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n    return a[0] === b[0] && a[1] === b[1];\n}\n","import * as Vec2Func from './functions/Vec2Func.js';\n\nexport class Vec2 extends Array {\n    constructor(x = 0, y = x) {\n        super(x, y);\n        return this;\n    }\n\n    get x() {\n        return this[0];\n    }\n\n    get y() {\n        return this[1];\n    }\n\n    set x(v) {\n        this[0] = v;\n    }\n\n    set y(v) {\n        this[1] = v;\n    }\n\n    set(x, y = x) {\n        if (x.length) return this.copy(x);\n        Vec2Func.set(this, x, y);\n        return this;\n    }\n\n    copy(v) {\n        Vec2Func.copy(this, v);\n        return this;\n    }\n\n    add(va, vb) {\n        if (vb) Vec2Func.add(this, va, vb);\n        else Vec2Func.add(this, this, va);\n        return this;\n    }\n\n    sub(va, vb) {\n        if (vb) Vec2Func.subtract(this, va, vb);\n        else Vec2Func.subtract(this, this, va);\n        return this;\n    }\n\n    multiply(v) {\n        if (v.length) Vec2Func.multiply(this, this, v);\n        else Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    divide(v) {\n        if (v.length) Vec2Func.divide(this, this, v);\n        else Vec2Func.scale(this, this, 1 / v);\n        return this;\n    }\n\n    inverse(v = this) {\n        Vec2Func.inverse(this, v);\n        return this;\n    }\n\n    // Can't use 'length' as Array.prototype uses it\n    len() {\n        return Vec2Func.length(this);\n    }\n\n    distance(v) {\n        if (v) return Vec2Func.distance(this, v);\n        else return Vec2Func.length(this);\n    }\n\n    squaredLen() {\n        return this.squaredDistance();\n    }\n\n    squaredDistance(v) {\n        if (v) return Vec2Func.squaredDistance(this, v);\n        else return Vec2Func.squaredLength(this);\n    }\n\n    negate(v = this) {\n        Vec2Func.negate(this, v);\n        return this;\n    }\n\n    cross(va, vb) {\n        if (vb) return Vec2Func.cross(va, vb);\n        return Vec2Func.cross(this, va);\n    }\n\n    scale(v) {\n        Vec2Func.scale(this, this, v);\n        return this;\n    }\n\n    normalize() {\n        Vec2Func.normalize(this, this);\n        return this;\n    }\n\n    dot(v) {\n        return Vec2Func.dot(this, v);\n    }\n\n    equals(v) {\n        return Vec2Func.exactEquals(this, v);\n    }\n\n    applyMatrix3(mat3) {\n        Vec2Func.transformMat3(this, this, mat3);\n        return this;\n    }\n\n    applyMatrix4(mat4) {\n        Vec2Func.transformMat4(this, this, mat4);\n        return this;\n    }\n\n    lerp(v, a) {\n        Vec2Func.lerp(this, this, v, a);\n        return this;\n    }\n\n    clone() {\n        return new Vec2(this[0], this[1]);\n    }\n\n    fromArray(a, o = 0) {\n        this[0] = a[o];\n        this[1] = a[o + 1];\n        return this;\n    }\n\n    toArray(a = [], o = 0) {\n        a[o] = this[0];\n        a[o + 1] = this[1];\n        return a;\n    }\n}\n","// TODO: delete texture\n// TODO: use texSubImage2D for updates (video or when loaded)\n// TODO: need? encoding = linearEncoding\n// TODO: support non-compressed mipmaps uploads\n\nconst emptyPixel = new Uint8Array(4);\n\nfunction isPowerOf2(value) {\n    return (value & (value - 1)) === 0;\n}\n\nlet ID = 1;\n\nexport class Texture3D {\n    constructor(\n        gl,\n        {\n            image,\n            target = gl.TEXTURE_2D,\n            type = gl.UNSIGNED_BYTE,\n            format = gl.RGBA,\n            internalFormat = format,\n            wrapS = gl.CLAMP_TO_EDGE,\n            wrapT = gl.CLAMP_TO_EDGE,\n            generateMipmaps = true,\n            minFilter = generateMipmaps ? gl.NEAREST_MIPMAP_LINEAR : gl.LINEAR,\n            magFilter = gl.LINEAR,\n            premultiplyAlpha = false,\n            unpackAlignment = 4,\n            flipY = target == gl.TEXTURE_2D ? true : false,\n            anisotropy = 0,\n            level = 0,\n            layers = 1,\n            width, // used for RenderTargets or Data Textures\n            height = width,\n        } = {}\n    ) {\n        this.gl = gl;\n        this.id = ID++;\n\n        this.image = image;\n        this.target = target;\n        this.type = type;\n        this.layers = layers;\n        this.format = format;\n        this.internalFormat = internalFormat;\n        this.minFilter = minFilter;\n        this.magFilter = magFilter;\n        this.wrapS = wrapS;\n        this.wrapT = wrapT;\n        this.generateMipmaps = generateMipmaps;\n        this.premultiplyAlpha = premultiplyAlpha;\n        this.unpackAlignment = unpackAlignment;\n        this.flipY = flipY;\n        this.anisotropy = Math.min(anisotropy, this.gl.renderer.parameters.maxAnisotropy);\n        this.level = level;\n        this.width = width;\n        this.height = height;\n        this.texture = this.gl.createTexture();\n\n        this.store = {\n            image: null,\n        };\n\n        // Alias for state store to avoid redundant calls for global state\n        this.glState = this.gl.renderer.state;\n\n        // State store to avoid redundant calls for per-texture state\n        this.state = {};\n        this.state.minFilter = this.gl.NEAREST_MIPMAP_LINEAR;\n        this.state.magFilter = this.gl.LINEAR;\n        this.state.wrapS = this.gl.REPEAT;\n        this.state.wrapT = this.gl.REPEAT;\n        this.state.anisotropy = 0;\n    }\n\n    bind() {\n        // Already bound to active texture unit\n        if (this.glState.textureUnits[this.glState.activeTextureUnit] === this.id) return;\n        this.gl.bindTexture(this.target, this.texture);\n        this.glState.textureUnits[this.glState.activeTextureUnit] = this.id;\n    }\n\n    update(textureUnit = 0) {\n        const needsUpdate = !(this.image === this.store.image && !this.needsUpdate);\n\n        // Make sure that texture is bound to its texture unit\n        if (needsUpdate || this.glState.textureUnits[textureUnit] !== this.id) {\n            // set active texture unit to perform texture functions\n            this.gl.renderer.activeTexture(textureUnit);\n            this.bind();\n        }\n\n        if (!needsUpdate) return;\n        this.needsUpdate = false;\n\n        if (this.flipY !== this.glState.flipY) {\n            this.gl.pixelStorei(this.gl.UNPACK_FLIP_Y_WEBGL, this.flipY);\n            this.glState.flipY = this.flipY;\n        }\n\n        if (this.premultiplyAlpha !== this.glState.premultiplyAlpha) {\n            this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, this.premultiplyAlpha);\n            this.glState.premultiplyAlpha = this.premultiplyAlpha;\n        }\n\n        if (this.unpackAlignment !== this.glState.unpackAlignment) {\n            this.gl.pixelStorei(this.gl.UNPACK_ALIGNMENT, this.unpackAlignment);\n            this.glState.unpackAlignment = this.unpackAlignment;\n        }\n\n        if (this.minFilter !== this.state.minFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MIN_FILTER, this.minFilter);\n            this.state.minFilter = this.minFilter;\n        }\n\n        if (this.magFilter !== this.state.magFilter) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_MAG_FILTER, this.magFilter);\n            this.state.magFilter = this.magFilter;\n        }\n\n        if (this.wrapS !== this.state.wrapS) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_S, this.wrapS);\n            this.state.wrapS = this.wrapS;\n        }\n\n        if (this.wrapT !== this.state.wrapT) {\n            this.gl.texParameteri(this.target, this.gl.TEXTURE_WRAP_T, this.wrapT);\n            this.state.wrapT = this.wrapT;\n        }\n\n        if (this.anisotropy && this.anisotropy !== this.state.anisotropy) {\n            this.gl.texParameterf(\n                this.target,\n                this.gl.renderer.getExtension('EXT_texture_filter_anisotropic').TEXTURE_MAX_ANISOTROPY_EXT,\n                this.anisotropy\n            );\n            this.state.anisotropy = this.anisotropy;\n        }\n\n        if (this.image) {\n            if (this.image.width) {\n                this.width = this.image.width;\n                this.height = this.image.height;\n            }\n\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // For cube maps\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage3D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        this.level,\n                        this.internalFormat,\n                        this.format,\n                        this.type,\n                        this.image[i]\n                    );\n                }\n            } else if (ArrayBuffer.isView(this.image)) {\n                // Data texture\n                this.gl.texImage3D(this.target, this.level, this.internalFormat, this.width, this.height, this.layers, 0, this.format, this.type, this.image);\n            } else if (this.image.isCompressedTexture) {\n                // Compressed texture\n                for (let level = 0; level < this.image.length; level++) {\n                    this.gl.compressedTexImage3D(\n                        this.target,\n                        level,\n                        this.internalFormat,\n                        this.image[level].width,\n                        this.image[level].height,\n                        0,\n                        this.image[level].data\n                    );\n                }\n            } else {\n                // Regular texture\n                this.gl.texImage3D(this.target, this.level, this.internalFormat, this.format, this.type, this.image);\n            }\n\n            if (this.generateMipmaps) {\n                // For WebGL1, if not a power of 2, turn off mips, set wrapping to clamp to edge and minFilter to linear\n                if (!this.gl.renderer.isWebgl2 && (!isPowerOf2(this.image.width) || !isPowerOf2(this.image.height))) {\n                    this.generateMipmaps = false;\n                    this.wrapS = this.wrapT = this.gl.CLAMP_TO_EDGE;\n                    this.minFilter = this.gl.LINEAR;\n                } else {\n                    this.gl.generateMipmap(this.target);\n                }\n            }\n\n            // Callback for when data is pushed to GPU\n            this.onUpdate && this.onUpdate();\n        } else {\n            if (this.target === this.gl.TEXTURE_CUBE_MAP) {\n                // Upload empty pixel for each side while no image to avoid errors while image or video loading\n                for (let i = 0; i < 6; i++) {\n                    this.gl.texImage3D(\n                        this.gl.TEXTURE_CUBE_MAP_POSITIVE_X + i,\n                        0,\n                        this.gl.RGBA,\n                        1,\n                        1,\n                        0,\n                        this.gl.RGBA,\n                        this.gl.UNSIGNED_BYTE,\n                        emptyPixel\n                    );\n                }\n            } else if (this.width) {\n                // image intentionally left null for RenderTarget\n                this.gl.texImage3D(this.target, this.level, this.internalFormat, this.width, this.height, 0, this.format, this.type, null);\n            } else {\n                // Upload empty pixel if no image to avoid errors while image or video loading\n                this.gl.texImage3D(this.target, 0, this.gl.RGBA, 1, 1, 0, this.gl.RGBA, this.gl.UNSIGNED_BYTE, emptyPixel);\n            }\n        }\n        this.store.image = this.image;\n    }\n}","#version 300 es\nprecision highp float;\nprecision highp sampler2DArray;\nuniform float uTime;\nuniform int numQuads;\nuniform highp int width;\nuniform highp int height;\nin vec2 textureId;\nflat out int vid;\nout vec2 vemu_PointCoord;\n\nfloat hash(float p) {\n  vec2 p2 = fract(vec2(p * 5.3983, p * 5.4427));\n  p2 += dot(p2.yx, p2.xy + vec2(21.5351, 14.3137));\n  return fract(p2.x * p2.y * 95.4337);\n}\nvec2 rotate(vec2 v, float a) {\n\tfloat s = sin(a);\n\tfloat c = cos(a);\n\tmat2 m = mat2(c, -s, s, c);\n\treturn m * v;\n}\n\nvec2 rotateUV(vec2 uv, float rotation, vec2 mid)\n{\n    return vec2(\n      cos(rotation) * (uv.x - mid.x) + sin(rotation) * (uv.y - mid.y) + mid.x,\n      cos(rotation) * (uv.y - mid.y) - sin(rotation) * (uv.x - mid.x) + mid.y\n    );\n}\n\nvoid main() {\n\n  int qID = numQuads-gl_InstanceID;\n  float u = float(qID) / float(numQuads);\n  vid = int(textureId[0]);\n  float offset = (0.);\n  float off = floor(uTime + u) / 1000.0;\n  float x = hash(u + off) * 2.0 - 1.0;             // random position\n  float y = fract(uTime + u) * -2.0 + 1.0;      // 1.0 ->  -1.0\n  float size =  (sin(uTime) + 1.0) * 5.;\n  float rotation = offset*0.02;\n  float rotXoffset=uTime;\n  float rotYoffset=uTime;\n\n\n  ivec2 unitQuad = ivec2(\n      gl_VertexID / 6 + gl_VertexID % 2,\n      (gl_VertexID / 2 + gl_VertexID / 3) % 2);\n\n  gl_Position = vec4(   vec2(x,y)  , u,  1.);\n  gl_Position.xy += (vec2(unitQuad) - 0.5) * 2.0 * size / vec2(width,height);\n  vec2 rot = rotateUV(gl_Position.xy, rotation,vec2(x + rotXoffset,y + rotYoffset)) ;\n  gl_Position.xy = rot;\n  vemu_PointCoord = vec2(unitQuad.x, 1.0 - float(unitQuad.y));\n}","/* eslint-disable immutable/no-mutation */\n\nimport { Renderer, Program, Vec2, Geometry } from 'ogl'\n\nimport { Texture3D } from '../texture3D';\n\nimport vertex from \"../shaders/main.vert\"\nimport fragment from \"../shaders/main.frag\"\n\nlet gl;\nlet timeUniformLoc;\nlet program;\nlet geometry;\nlet  numQuads;\n\nconst zoom = { value: 0.5 }\nconst pan = { value: new Vec2(0, 0) }\nconst uTime = { value: 0.0 }\n\nconst texSize = 32;\nconst texWidth = 1024;\nconst texHeight = texWidth;\nconst texCols = Math.floor(texWidth / texSize);\nconst layers = 20;\nlet textureBitArray = new Uint8Array((texWidth * texHeight) * layers);\n\nself.onmessage = function (ev) {\n    if (ev.data.msg === 'offscreen') {\n        ev.data.canvas.style = {};\n        init(ev.data.canvas,ev.data.numparticles);\n    }\n    if(ev.data.msg === 'resize'){\n        gl.canvas.width = ev.data.width *0.75;\n        gl.canvas.height = ev.data.height *0.75;\n    }\n    if(ev.data.msg === 'uploadTextureBatch'){\n        uploadTextureBatch(ev.data.images);\n    }\n    if(ev.data.msg === 'updateAttribute'){\n        updateAttribute(ev.data.key,ev.data.data);\n    }\n\n}\n\nfunction updateTextureBitArray(image){\n    const indx = image.id;\n    for (let y = 0; y < texSize; y++) {\n        for (let x = 0; x < image.width; x++) {\n            textureBitArray[x + (y + (Math.floor(indx / texCols) * texSize)) * texWidth + ((indx % texCols) * 32)] = image.data[x + y * image.width];\n        }\n    }\n}\n\nfunction uploadTextureBatch(images,xOffset=0,yOffset=0,zOffset=0,width=512,height=512){ \n    const layers = Math.ceil(images.length / (texCols * texCols));\n    images.forEach((image)=>updateTextureBitArray(image));\n\n\n    gl.texSubImage3D(gl.TEXTURE_2D_ARRAY, 0 , xOffset , yOffset , zOffset , width, height,layers, gl.ALPHA, gl.UNSIGNED_BYTE, textureBitArray);\n    return textureBitArray;\n}\n\nfunction updateAttribute(key,data){\n    geometry.attributes[key].data = data;\n    geometry.updateAttribute(geometry.attributes[key]);\n}\n\nfunction init(canvas,numparticles = 10000) {\n   \n    numQuads = numparticles;\n    const renderer = new Renderer({ canvas})\n    gl = renderer.gl\n\n    gl.clearColor(1, 1, 1, 1);\n\n    const tex3D = new Texture3D(gl, { target: gl.TEXTURE_2D_ARRAY, image: new Uint8Array((texWidth * texHeight) * layers) , generateMipmaps: false, format: gl.ALPHA, type: gl.UNSIGNED_BYTE, width: texWidth, layers, magFilter: gl.NEAREST, minFilter: gl.NEAREST })\n\n    program = new Program(gl, {\n        vertex,\n        fragment,\n        transparent: true,\n        cullFace: false,\n        uniforms: {\n            uTime,\n            zoom,\n            pan,\n            width: { value: texWidth },\n            height: { value: texHeight },\n            u_image: { value: tex3D },\n            numQuads: { value: numQuads }\n        }\n    })\n\n    if (!gl.getProgramParameter(program.program, gl.LINK_STATUS)) {\n        throw new Error(\"shader compile error ^^^^^\")\n    }\n\n    program.use();\n\n    geometry = new Geometry(gl, {\n        textureId: {size:2, data:new Float32Array(), instanced: 1 },\n    });\n\n    geometry.bindAttributes(program);\n\n    timeUniformLoc = gl.getUniformLocation(program.program, \"uTime\");\n    requestAnimationFrame(update)\n}\n\nfunction update() {\n    uTime.value += 0.01;\n    gl.uniform1f(timeUniformLoc, uTime.value);\n    gl.viewport(0, 0, gl.canvas.width, gl.canvas.height);\n    gl.drawArraysInstanced(gl.TRIANGLES, 0, 6, numQuads)\n    requestAnimationFrame(update);\n}\n","#version 300 es\nprecision highp float;\n precision highp sampler2DArray;\n#define PI 3.1415926538\n\nuniform float uTime;\nuniform sampler2DArray u_image;\nuniform sampler2D u_imagetest;\nuniform highp int width;\nuniform highp int height;\n\nflat in int vid;\nout vec4 color;\n\nin vec2 vemu_PointCoord;\n\n#pragma glslify: palette = require('./palette.glsl')\n\n\n\nvoid drawTiles(){\n    vec2    uv = vemu_PointCoord.xy; \n    color = vec4(0.5);\n    if(uv.x < 0. || uv.x > 0. + 1.|| uv.y < 0. || uv.y > 0. + 1.) {\n       color = vec4(0.0,0.0,0.0,0.0);\n       return;\n    }\n\n\n    vec2 spriteSize = vec2(32.,32.);\n    \n    float spnum = float(vid );\n  \n    float dx = spriteSize.x / float(width);\n    float dy = spriteSize.y / float(height);\n    \n    float cols = float(width) / spriteSize.x;\n    \n    float index = mod(spnum  , cols*cols);\n    // From linear index to row/col pair\n    float col = mod(index, cols);\n    float row = floor(index / cols);\n    uv = vec2(dx * uv.x + (col/cols) ,   dy * uv.y + (row/cols) );\n    int currentLayer = int(floor(spnum / (cols*cols)));\n    vec3 currentPos = vec3(uv, float(currentLayer));\n    int indx = int(texture(u_image, currentPos).a * 255.0) ;\n    if(indx == 0 ){\n          color = vec4(0.0,0.0,0.0,0.0);\n       return;\n    }\n    color=  vec4(palette[indx],1.0);\n    \n    }\n\n\nvoid main() {\n    drawTiles();\n}\n\n"],"names":["self","ReferenceError","instance","Constructor","TypeError","$06880cd84c64632f$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","$1fb534d731120aa2$var$setPrototypeOf","o1","p1","setPrototypeOf","o","p","__proto__","subClass","superClass","create","constructor","value","$1fb534d731120aa2$export$2e2bcd8739ae039","call","obj","Symbol","$e4044b8154fa92b0$export$2e2bcd8739ae039","$9ccde2aba8f265cd$var$isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","e","$9ccde2aba8f265cd$var$construct","Parent1","args1","Class1","Parent","args","Class","a","push","apply","Function","bind","_setPrototypeOf","arguments","$d40c5874763bdc7f$var$getPrototypeOf","getPrototypeOf","$72fdb3baf01d4137$var$wrapNativeSuper","_cache","Map","undefined","fn","indexOf","has","get","set","Wrapper","$9ccde2aba8f265cd$export$2e2bcd8739ae039","$d40c5874763bdc7f$export$2e2bcd8739ae039","this","Derived","hasNativeReflectConstruct","Boolean","valueOf","$42713ae858e78e0c$export$2e2bcd8739ae039","result","Super","NewTarget","$b4f6bd33c38c53dc$export$2e2bcd8739ae039","$177d6e4d72d1b662$export$f24224f1c91d8156","x","y","z","Math","sqrt","$177d6e4d72d1b662$export$784d13d8ee351f07","out","$177d6e4d72d1b662$export$adaa4cf7ef1b65be","$177d6e4d72d1b662$export$e16d8520af44a096","b","$177d6e4d72d1b662$export$4e2d2ead65e5f7e3","$177d6e4d72d1b662$export$dcdf75081b88279d","$177d6e4d72d1b662$export$ab44e1323ffc8376","$177d6e4d72d1b662$export$aef51622e549b8b0","$177d6e4d72d1b662$export$70ae2c07e401031b","$177d6e4d72d1b662$export$a3295358bff77e","len","$177d6e4d72d1b662$export$94132a0e348806d4","$177d6e4d72d1b662$export$bb646b20bb93d339","ax","ay","az","bx","by","bz","tempA","tempB","$177d6e4d72d1b662$export$944b09d2ad10b378","cosine","PI","acos","$f862b28f03078ad6$export$838423f3adec30fa","Array","_this","v","copy","va","vb","mat4","m","w","q","qx","qy","qz","uvx","uvy","uvz","uuvx","uuvy","uuvz","w2","$177d6e4d72d1b662$export$c32adef9e939ce85","t","$177d6e4d72d1b662$export$3a89f8d6f6bf6c9f","normalize","$e70ae6dd5b0e07ca$var$tempVec3","$e70ae6dd5b0e07ca$var$ID","$e70ae6dd5b0e07ca$var$ATTR_ID","$e70ae6dd5b0e07ca$var$isBoundsWarned","$e70ae6dd5b0e07ca$export$2db6c17465f94a2","gl","attributes","canvas","console","error","id","VAOs","drawRange","start","count","instancedCount","renderer","bindVertexArray","currentGeometry","glState","state","addAttribute","attr","size","type","data","Float32Array","FLOAT","Uint16Array","UNSIGNED_SHORT","UNSIGNED_INT","ELEMENT_ARRAY_BUFFER","ARRAY_BUFFER","normalized","stride","offset","byteLength","divisor","instanced","needsUpdate","buffer","createBuffer","updateAttribute","isInstanced","warn","min","index","max","boundBuffer","bindBuffer","bufferData","STATIC_DRAW","program","attributeOrder","createVertexArray","bindAttributes","attributeLocations","forEach","location","param","name","numLoc","vertexAttribPointer","enableVertexAttribArray","vertexAttribDivisor","concat","param1","_mode","mode","TRIANGLES","createVAO","drawElementsInstanced","drawArraysInstanced","drawElements","drawArrays","position","getPosition","array","bounds","center","scale","radius","Infinity","l","sub","add","divide","computeBoundingBox","maxRadiusSq","fromArray","squaredDistance","deleteVertexArray","key1","deleteBuffer","$bf9d19bf4fbd8919$var$ID","$bf9d19bf4fbd8919$var$arrayCacheF32","$bf9d19bf4fbd8919$export$b6c59b989905b650","ref","vertex","fragment","_uniforms","uniforms","_transparent","transparent","_cullFace","cullFace","BACK","_frontFace","frontFace","CCW","_depthTest","depthTest","_depthWrite","depthWrite","_depthFunc","depthFunc","LESS","blendFunc","blendEquation","src","premultipliedAlpha","setBlendFunc","ONE","ONE_MINUS_SRC_ALPHA","SRC_ALPHA","vertexShader","createShader","VERTEX_SHADER","shaderSource","compileShader","getShaderInfoLog","$bf9d19bf4fbd8919$var$addLineNumbers","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteShader","uniformLocations","numUniforms","ACTIVE_UNIFORMS","uIndex","uniform","getActiveUniform","getUniformLocation","split","match","uniformName","isStructArray","structIndex","Number","structProperty","isNaN","isStruct","locations","numAttribs","ACTIVE_ATTRIBUTES","aIndex","attribute","getActiveAttrib","getAttribLocation","join","dst","srcAlpha","dstAlpha","modeRGB","modeAlpha","enable","DEPTH_TEST","disable","CULL_FACE","BLEND","setCullFace","setFrontFace","setDepthMask","setDepthFunc","setBlendEquation","_flipFaces","flipFaces","textureUnit","programActive","currentProgram","useProgram","activeUniform","$bf9d19bf4fbd8919$var$warn","texture","update","$bf9d19bf4fbd8919$var$setUniform","textureUnits","applyState","CW","deleteProgram","arrayLen","valueLen","$bf9d19bf4fbd8919$var$flatten","setValue","slice","$bf9d19bf4fbd8919$var$arraysEqual","$bf9d19bf4fbd8919$var$setArray","uniform1fv","uniform1f","uniform2fv","uniform3fv","uniform4fv","uniform1iv","uniform1i","uniform2iv","uniform3iv","uniform4iv","uniformMatrix2fv","uniformMatrix3fv","uniformMatrix4fv","string","lines","$bf9d19bf4fbd8919$var$warnCount","message","$ca1c0ea54bb63dde$var$tempVec3","$ca1c0ea54bb63dde$var$ID","$ca1c0ea54bb63dde$export$88530751e3977073","_canvas","document","createElement","_width","width","_height","height","_dpr","dpr","_alpha","alpha","_depth","depth","_stencil","stencil","_antialias","antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_autoClear","autoClear","_webgl","webgl","color","getContext","isWebgl2","setSize","ZERO","FUNC_ADD","depthMask","premultiplyAlpha","flipY","unpackAlignment","framebuffer","viewport","activeTextureUnit","extensions","getExtension","drawBuffers","parameters","maxTextureUnits","getParameter","MAX_COMBINED_TEXTURE_IMAGE_UNITS","maxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","assign","style","scissor","blendFuncSeparate","blendEquationSeparate","activeTexture","TEXTURE0","_target","FRAMEBUFFER","_buffer","bindFramebuffer","extension","webgl2Func","extFunc","renderOrder","zDepth","scene","camera","frustumCull","sort","renderList","updateFrustum","traverse","node","visible","draw","frustumCulled","frustumIntersectsMesh","opaque","ui","worldMatrix","getTranslation","applyMatrix4","projectionViewMatrix","sortOpaque","sortTransparent","sortUI","_update","_sort","_frustumCull","clear","setViewport","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","updateMatrixWorld","getRenderList","$58f53b98d4fae8c9$export$adaa4cf7ef1b65be","$58f53b98d4fae8c9$export$e16d8520af44a096","$58f53b98d4fae8c9$export$4e2d2ead65e5f7e3","$58f53b98d4fae8c9$export$dcdf75081b88279d","$58f53b98d4fae8c9$export$f24224f1c91d8156","$58f53b98d4fae8c9$export$aef51622e549b8b0","$58f53b98d4fae8c9$export$70ae2c07e401031b","$58f53b98d4fae8c9$export$bb646b20bb93d339","$d0be7e126e6a4183$export$ac4bca90992eed1","$58f53b98d4fae8c9$export$ab44e1323ffc8376","mat3","$58f53b98d4fae8c9$export$3a89f8d6f6bf6c9f","$de1bab1d99301e89$var$emptyPixel","Uint8Array","$de1bab1d99301e89$var$isPowerOf2","$de1bab1d99301e89$var$ID","$de1bab1d99301e89$export$b7ba14ec3f632e98","image","TEXTURE_2D","_type","UNSIGNED_BYTE","_format","format","RGBA","_internalFormat","internalFormat","_wrapS","wrapS","CLAMP_TO_EDGE","_wrapT","wrapT","_generateMipmaps","generateMipmaps","_minFilter","minFilter","NEAREST_MIPMAP_LINEAR","LINEAR","_magFilter","magFilter","_premultiplyAlpha","_unpackAlignment","_flipY","_anisotropy","anisotropy","_level","level","_layers","layers","createTexture","store","REPEAT","bindTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","texParameteri","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","TEXTURE_WRAP_T","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","TEXTURE_CUBE_MAP","texImage3D","TEXTURE_CUBE_MAP_POSITIVE_X","ArrayBuffer","isView","isCompressedTexture","compressedTexImage3D","generateMipmap","onUpdate","i1","$b20f1d2e1a2fbfa3$exports","$e64687fa858123ed$var$gl","$e64687fa858123ed$var$timeUniformLoc","$e64687fa858123ed$var$program","$e64687fa858123ed$var$geometry","$e64687fa858123ed$var$numQuads","$670ac380d36d5772$exports","$e64687fa858123ed$var$zoom","$e64687fa858123ed$var$pan","$e64687fa858123ed$var$uTime","$e64687fa858123ed$var$texWidth","$e64687fa858123ed$var$texHeight","$e64687fa858123ed$var$texCols","floor","$e64687fa858123ed$var$layers","$e64687fa858123ed$var$textureBitArray","$e64687fa858123ed$var$updateTextureBitArray","indx","$e64687fa858123ed$var$update","requestAnimationFrame","onmessage","ev","msg","clearColor","tex3D","TEXTURE_2D_ARRAY","ALPHA","NEAREST","$parcel$interopDefault","uTime","zoom","pan","u_image","numQuads","Error","use","textureId","$e64687fa858123ed$var$init","numparticles","images","xOffset","yOffset","zOffset","ceil","texSubImage3D","$e64687fa858123ed$var$uploadTextureBatch"],"version":3,"file":"world.410a2542.js.map"}